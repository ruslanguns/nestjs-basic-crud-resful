var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.096,1,1.881]],["body/classes/AllExceptionsFilter.html",[0,0.116,1,2.907,2,1.818,3,0.388,4,0.329,5,0.329,6,3.842,7,3.008,8,1.719,9,5.128,10,0.45,11,1.282,12,5.403,13,4.654,14,5.128,15,3.643,16,5.403,17,0.736,18,3.644,19,1.004,20,0.038,21,0.736,22,0.45,23,0.658,24,3.842,25,1.004,26,1.818,27,0.388,28,2.322,29,1.484,30,0.658,31,0.388,32,1.643,33,3.644,34,3.644,35,3.008,36,3.644,37,3.008,38,3.644,39,2.588,40,3.644,41,3.644,42,3.644,43,3.644,44,3.644,45,3.644,46,1.108,47,3.644,48,2.589,49,3.644,50,0.022,51,0.029,52,0.022]],["title/modules/AppModule.html",[53,1.009,54,1.881]],["body/modules/AppModule.html",[0,0.103,1,2.679,3,0.342,4,0.29,5,0.29,20,0.039,27,0.617,30,0.581,31,0.342,48,3.047,50,0.02,51,0.026,52,0.02,53,1.617,54,3.574,55,1.309,56,1.447,57,1.787,58,1.787,59,1.447,60,2.385,61,2.385,62,2.653,63,2.653,64,3.068,65,3.068,66,2.385,67,1.787,68,1.787,69,3.215,70,2.679,71,2.284,72,1.604,73,4.288,74,4.288,75,2.653,76,2.679,77,3.215,78,3.215,79,2.653,80,2.14,81,3.215,82,3.215,83,3.215,84,3.215,85,3.215,86,3.215,87,3.215,88,2.679,89,3.215,90,3.215,91,2.008,92,3.215,93,3.215,94,1.604,95,4.288,96,4.288,97,3.215,98,2.653]],["title/injectables/AuthMiddleware.html",[99,0.677,100,1.881]],["body/injectables/AuthMiddleware.html",[0,0.099,3,0.331,4,0.28,5,0.28,8,1.147,10,0.384,11,1.155,17,0.847,19,1.155,20,0.038,21,0.847,22,0.518,23,0.757,25,0.856,27,0.582,28,1.55,29,1.265,30,0.561,31,0.331,32,1.544,35,4.191,37,4.191,46,1.274,50,0.019,51,0.026,52,0.019,80,1.55,99,0.942,100,2.617,101,1.398,102,2.563,103,2.134,104,2.617,105,1.55,106,2.563,107,2.068,108,3.106,109,2.977,110,2.977,111,2.637,112,3.607,113,5.077,114,3.106,115,1.94,116,2.206,117,2.977,118,2.563,119,1.727,120,1.94,121,2.33,122,2.563,123,2.563,124,1.147,125,5.077,126,2.563,127,3.459,128,3.459,129,1.398,130,2.206,131,3.106,132,1.751,133,1.398,134,2.563,135,2.091,136,3.106,137,2.563,138,3.459,139,1.94,140,3.106,141,2.563]],["title/injectables/CheckAdminRoleMiddleware.html",[99,0.677,142,1.881]],["body/injectables/CheckAdminRoleMiddleware.html",[0,0.109,3,0.364,4,0.309,5,0.309,8,1.263,10,0.423,11,1.231,17,0.691,19,0.942,20,0.038,21,0.691,22,0.423,23,0.618,25,0.942,26,2.229,27,0.364,30,0.618,31,0.364,32,1.04,50,0.021,51,0.028,52,0.021,91,2.136,99,1.004,101,1.539,104,2.791,110,3.174,111,2.767,112,3.748,115,2.136,117,3.174,129,1.539,132,1.263,139,2.136,142,2.791,143,3.174,144,3.419,145,2.43,146,3.42,147,2.43,148,2.43,149,2.43,150,3.688,151,3.888,152,2.823,153,2.823,154,2.823,155,2.823,156,2.823,157,3.42,158,1.65,159,2.43,160,2.136,161,3.42,162,2.823,163,3.42,164,2.823,165,2.823,166,2.823,167,2.823,168,3.688,169,1.902,170,1.539,171,2.823,172,2.823,173,2.823]],["title/injectables/CheckRoleMiddleware.html",[99,0.677,174,1.881]],["body/injectables/CheckRoleMiddleware.html",[0,0.105,3,0.351,4,0.298,5,0.298,8,1.218,10,0.408,11,1.202,17,0.666,19,0.909,20,0.038,21,0.666,22,0.408,23,0.596,25,0.909,26,2.176,27,0.465,29,1.343,30,0.596,31,0.351,32,1.326,50,0.02,51,0.027,52,0.02,91,2.06,99,0.981,101,1.484,104,2.724,110,3.099,111,2.717,112,3.695,115,2.06,117,3.099,129,1.484,132,1.218,139,2.06,143,3.099,144,2.06,145,2.343,147,2.343,148,2.343,149,2.343,150,3.6,151,3.843,152,2.722,153,2.722,154,2.722,155,2.722,156,2.722,158,1.611,160,2.724,162,2.722,164,2.722,165,2.722,166,2.722,167,2.722,168,3.6,169,1.833,170,1.484,171,2.722,172,2.722,173,2.722,174,2.724,175,3.297,176,3.297,177,3.297,178,2.724,179,3.297,180,3.297,181,3.297,182,3.297,183,3.6,184,3.297,185,3.297,186,3.297]],["title/classes/CreateUserDTO.html",[0,0.096,187,1.675]],["body/classes/CreateUserDTO.html",[0,0.133,2,1.538,3,0.328,4,0.278,5,0.278,10,0.381,17,1.126,20,0.038,22,0.689,23,0.753,27,0.444,31,0.328,39,2.627,50,0.019,51,0.026,52,0.019,124,2.217,187,2.319,188,4.678,189,2.545,190,1.877,191,2.627,192,2.127,193,2.951,194,2.358,195,2.627,196,2.127,197,2.526,198,3.083,199,1.562,200,2.639,201,3.083,202,3.083,203,3.083,204,3.083,205,3.083,206,3.083,207,4.027,208,3.083,209,2.319,210,3.083,211,3.083,212,3.083,213,3.083,214,3.357,215,2.191,216,3.596,217,2.191,218,2.963,219,2.191,220,2.191,221,1.538,222,1.538,223,4.17,224,3.083,225,3.083]],["title/classes/LoginUserDTO.html",[0,0.096,226,1.675]],["body/classes/LoginUserDTO.html",[0,0.152,2,1.877,3,0.401,4,0.339,5,0.339,10,0.465,17,1.052,20,0.038,22,0.643,27,0.506,31,0.401,50,0.023,51,0.029,52,0.023,124,2.126,190,2.137,192,2.342,194,2.597,196,2.342,199,1.586,200,2.597,207,4.153,214,2.673,215,2.673,216,2.673,217,2.673,218,2.673,219,2.673,220,2.673,221,1.877,222,1.877,226,2.641,227,3.105,228,3.761,229,3.761,230,3.761]],["title/interfaces/Product.html",[231,1.675,232,1.356]],["body/interfaces/Product.html",[3,0.385,4,0.326,5,0.326,10,0.447,20,0.038,21,1.088,22,0.688,27,0.385,31,0.385,50,0.022,51,0.028,52,0.022,124,2.056,190,2.083,191,2.995,197,2.549,199,1.632,231,2.84,232,2.083,233,2.567,234,2.982,235,3.478,236,1.885,237,3.821,238,3.289,239,2.574,240,3.821,241,4.216,242,4.446,243,4.446,244,3.19,245,1.803]],["title/controllers/ProductController.html",[246,1.675,247,1.881]],["body/controllers/ProductController.html",[0,0.089,3,0.19,4,0.161,5,0.161,10,0.22,11,0.769,17,0.854,19,1.165,20,0.039,21,0.854,22,0.345,23,0.764,25,1.165,27,0.45,29,0.726,30,0.322,31,0.19,32,1.285,46,1.552,50,0.011,51,0.017,52,0.011,94,0.889,103,2.468,105,0.889,111,3.184,133,1.903,135,2.339,158,1.561,159,3.186,170,1.256,178,2.928,199,0.948,200,2.11,222,0.889,232,2.018,238,1.983,246,0.99,247,1.743,248,1.47,249,1.47,250,3.44,251,2.84,252,2.84,253,2.84,254,2.84,255,1.781,256,4.568,257,2.303,258,1.781,259,2.303,260,5.104,261,2.84,262,1.781,263,4.526,264,2.79,265,1.781,266,2.303,267,3.893,268,2.84,269,1.781,270,1.781,271,1.781,272,3.214,273,1.781,274,2.303,275,1.781,276,2.303,277,1.983,278,1.781,279,2.79,280,1.781,281,2.79,282,2.79,283,2.303,284,2.84,285,2.84,286,4.294,287,1.47,288,1.781,289,1.113,290,1.47,291,1.717,292,1.47,293,3.214,294,1.47,295,2.928,296,1.47,297,1.47,298,2.303,299,1.47,300,1.781,301,0.802,302,2.79,303,1.781,304,1.47,305,1.781,306,1.781,307,3.214,308,3.214,309,1.781,310,1.781,311,1.781,312,2.84,313,2.84,314,2.84,315,2.79,316,3.44,317,1.781,318,1.47,319,2.303,320,2.84,321,1.781,322,1.47]],["title/modules/ProductModule.html",[53,1.009,64,1.675]],["body/modules/ProductModule.html",[0,0.114,3,0.378,4,0.321,5,0.321,20,0.038,21,0.718,27,0.604,30,0.642,31,0.378,50,0.022,51,0.028,52,0.022,53,1.698,55,1.447,56,1.599,57,1.976,58,1.976,59,1.599,60,2.818,61,1.976,64,3.25,66,2.546,67,1.976,68,1.976,70,2.86,71,2.524,72,1.773,94,2.285,232,1.599,239,1.976,247,3.165,291,2.83,292,2.933,323,2.933,324,2.933,325,2.933,326,2.879,327,3.553,328,3.553,329,3.254,330,3.553,331,2.933,332,2.933]],["title/injectables/ProductService.html",[99,0.677,291,1.503]],["body/injectables/ProductService.html",[0,0.085,3,0.282,4,0.239,5,0.239,10,0.328,11,1.035,17,1.051,19,1.38,20,0.038,21,1.012,22,0.619,23,0.905,25,1.38,27,0.533,30,0.479,31,0.282,32,1.522,46,1.142,50,0.016,51,0.023,52,0.016,72,1.322,88,1.655,99,0.844,101,1.193,103,2.646,105,1.873,124,0.979,133,2.254,158,1.849,199,1.531,232,2.135,238,2.668,245,1.322,251,3.099,252,3.099,253,3.915,254,3.099,256,4.749,263,3.599,290,2.187,291,1.873,301,1.193,320,3.099,333,2.187,334,3.755,335,2.65,336,3.915,337,2.65,338,3.755,339,3.755,340,2.65,341,4.002,342,3.755,343,2.65,344,3.755,345,2.65,346,2.65,347,3.755,348,2.65,349,2.187,350,2.65,351,2.65,352,2.65,353,2.65,354,2.65,355,2.65,356,2.65,357,3.755,358,2.65]],["title/classes/UserDTO.html",[0,0.096,359,2.14]],["body/classes/UserDTO.html",[0,0.119,2,1.311,3,0.28,4,0.237,5,0.237,10,0.325,17,1.149,20,0.038,22,0.703,23,1.067,27,0.398,31,0.28,39,2.414,50,0.016,51,0.023,52,0.016,124,2.278,190,1.68,191,2.414,192,1.954,193,2.711,194,2.166,195,2.414,196,1.954,197,2.358,199,1.627,200,2.839,207,4.303,209,2.076,214,1.867,215,1.867,216,1.867,217,1.867,218,1.867,219,1.867,220,1.867,221,1.311,222,1.311,359,2.652,360,2.169,361,2.414,362,2.414,363,2.711,364,3.084,365,2.628,366,2.628,367,2.628,368,2.628,369,2.628,370,2.628,371,2.628,372,2.628,373,2.628,374,2.628,375,2.628]],["title/interfaces/Users.html",[231,1.675,236,1.227]],["body/interfaces/Users.html",[3,0.317,4,0.269,5,0.269,10,0.368,20,0.038,22,0.72,23,1.085,27,0.317,31,0.317,39,2.774,50,0.018,51,0.025,52,0.018,124,2.15,190,1.832,191,2.774,192,2.245,193,3.115,194,2.489,195,2.774,196,2.245,197,2.691,199,1.692,209,2.58,231,2.58,233,2.114,235,1.859,236,2.197,237,3.36,239,2.263,240,3.36,241,3.83,245,1.485,361,2.774,362,2.774,363,3.115,364,3.544,376,2.456]],["title/controllers/UsersController.html",[246,1.675,377,1.881]],["body/controllers/UsersController.html",[0,0.051,3,0.169,4,0.143,5,0.143,8,0.586,10,0.196,11,0.702,17,0.941,19,1.235,20,0.039,21,0.906,22,0.451,23,0.81,25,1.284,26,0.792,27,0.512,28,1.271,29,0.646,30,0.46,31,0.169,32,1.499,46,1.363,50,0.01,51,0.016,52,0.01,53,0.853,94,0.792,103,2.53,105,0.792,107,1.037,109,1.128,111,3.084,129,1.146,132,1.821,133,2.097,135,1.591,137,1.31,158,1.655,160,1.992,169,1.416,170,1.643,178,2.28,187,2.939,192,1.643,196,1.146,199,0.879,200,2.236,222,0.792,226,2.492,236,1.299,246,0.883,249,1.31,257,1.31,259,2.102,261,1.31,266,2.102,268,1.31,272,3.521,274,1.31,276,2.102,277,3.031,283,2.102,284,1.31,285,3.013,286,1.31,287,1.31,289,0.991,293,3.013,294,1.31,295,0.991,296,1.31,297,1.31,298,3.298,299,1.31,301,1.146,304,2.102,307,1.31,308,2.633,312,1.31,313,1.31,318,1.31,319,2.102,322,1.31,341,1.809,361,1.416,362,1.416,363,1.591,377,1.591,378,1.31,379,2.633,380,3.189,381,2.633,382,2.633,383,4.266,384,3.521,385,3.189,386,2.633,387,1.587,388,4.071,389,3.65,390,4.266,391,4.266,392,1.587,393,1.587,394,1.587,395,3.189,396,2.547,397,1.587,398,1.587,399,1.587,400,1.587,401,1.587,402,1.587,403,1.587,404,1.587,405,1.587,406,1.587,407,1.587,408,1.587,409,1.587,410,1.587,411,1.587,412,1.587,413,1.587,414,1.587,415,1.31,416,1.31,417,1.31,418,1.31,419,1.587,420,1.31,421,1.809,422,4.659,423,1.587,424,1.587,425,1.587,426,1.587,427,4.482,428,1.587,429,1.587,430,1.587,431,2.547,432,1.587,433,1.587,434,1.587,435,3.189,436,1.587,437,1.587,438,1.587,439,1.587,440,1.587,441,1.587,442,1.587,443,3.189,444,1.587,445,1.587,446,2.633,447,1.587,448,1.587,449,1.587,450,2.102,451,1.587,452,1.587]],["title/modules/UsersModule.html",[53,1.009,65,1.675]],["body/modules/UsersModule.html",[0,0.089,3,0.297,4,0.252,5,0.252,8,1.03,11,0.768,17,0.563,19,0.768,20,0.039,21,0.786,22,0.345,23,0.504,25,0.768,26,1.391,27,0.599,30,0.504,31,0.297,48,3.854,50,0.017,51,0.024,52,0.017,53,1.502,55,1.136,56,1.255,57,1.55,58,1.55,59,1.255,60,2.493,61,1.55,65,3.077,66,2.164,67,1.55,68,1.55,70,2.431,71,1.981,72,1.391,94,1.942,100,1.742,107,2.153,132,1.437,142,1.742,144,1.742,174,1.742,239,1.55,326,2.707,331,2.302,332,2.302,377,2.8,417,2.302,453,2.302,454,2.788,455,2.302,456,2.788,457,3.212,458,2.788,459,3.891,460,4.851,461,2.788,462,4.851,463,2.788,464,3.891,465,2.788,466,2.765,467,2.788,468,2.788,469,3.891,470,3.891,471,2.788,472,4.482,473,5.424,474,5.103,475,2.788,476,4.482,477,2.788,478,2.788,479,2.788,480,2.788,481,2.788,482,2.788]],["title/injectables/UsersService.html",[99,0.677,107,1.227]],["body/injectables/UsersService.html",[0,0.081,3,0.168,4,0.143,5,0.143,10,0.195,11,0.7,17,1.017,19,1.357,20,0.039,21,0.995,22,0.575,23,0.89,25,1.357,27,0.546,28,1.267,29,0.644,30,0.286,31,0.168,32,1.605,46,1.415,50,0.01,51,0.016,52,0.01,72,0.789,80,0.789,88,0.988,99,0.571,101,0.712,103,2.569,105,1.267,107,1.034,116,1.123,119,0.879,120,0.988,121,1.412,124,0.938,129,1.143,132,1.893,133,2.217,135,1.267,148,1.123,158,1.819,160,0.988,169,0.879,170,0.712,178,2.275,187,2.799,192,2.014,194,1.267,195,1.412,196,1.917,197,1.267,199,1.413,221,0.789,226,2.218,236,1.296,245,0.789,289,0.988,301,1.795,314,1.305,336,3.006,341,3.642,349,1.305,361,1.412,362,1.412,379,2.096,381,2.096,382,3.006,386,2.096,388,2.626,415,1.305,416,1.305,418,1.305,420,1.305,446,2.096,450,2.096,457,2.626,483,1.305,484,2.539,485,2.539,486,2.539,487,2.539,488,2.539,489,2.539,490,1.581,491,3.181,492,1.817,493,1.581,494,2.539,495,2.539,496,1.581,497,2.539,498,1.581,499,1.581,500,2.539,501,1.581,502,2.539,503,1.581,504,2.539,505,1.581,506,2.539,507,1.581,508,2.539,509,1.581,510,2.539,511,1.581,512,1.581,513,2.539,514,1.581,515,1.305,516,2.096,517,1.581,518,1.581,519,1.581,520,2.539,521,2.539,522,1.581,523,1.581,524,1.581,525,1.581,526,1.581,527,1.581,528,2.539,529,1.581,530,1.581,531,3.181,532,1.581,533,1.581,534,1.581,535,1.581,536,1.305,537,0.988,538,2.539,539,2.096,540,1.581,541,1.123,542,1.123,543,1.305,544,1.305,545,1.581,546,1.581,547,1.581,548,1.581,549,1.581,550,2.539,551,1.581,552,1.581,553,1.581,554,1.581,555,1.581,556,1.581,557,1.581,558,2.539,559,1.581,560,2.539,561,1.581,562,1.581,563,1.581,564,1.581,565,1.581,566,2.539,567,2.539,568,1.581,569,1.581,570,2.539,571,1.581,572,1.581,573,1.581,574,1.581]],["title/injectables/ValidationPipe.html",[76,1.881,99,0.677]],["body/injectables/ValidationPipe.html",[0,0.143,3,0.298,4,0.252,5,0.252,8,1.032,10,0.345,11,1.074,17,0.907,19,1.237,20,0.039,21,0.907,22,0.482,23,0.811,25,1.237,27,0.517,28,1.945,29,1.138,30,0.505,31,0.298,32,1.553,46,1.185,50,0.028,51,0.024,52,0.017,76,2.434,99,0.876,101,1.258,103,2.02,116,1.985,133,1.258,135,1.945,158,1.793,169,2.495,170,1.258,199,0.77,209,2.495,221,1.394,244,1.745,289,1.745,295,2.434,301,2.381,515,2.307,536,2.307,537,1.745,539,2.307,541,2.769,542,1.985,543,2.307,544,2.307,575,2.307,576,3.897,577,3.897,578,3.897,579,3.897,580,2.794,581,3.897,582,2.794,583,4.856,584,3.897,585,4.856,586,4.856,587,2.794,588,3.628,589,3.897,590,2.794,591,2.307,592,2.794,593,2.794,594,2.794,595,2.794,596,2.794,597,2.794,598,2.794,599,2.794,600,2.794,601,2.794,602,2.794,603,2.794,604,2.794,605,2.794,606,2.794,607,2.794]],["title/guards/WsJwtGuard.html",[608,1.881,609,2.14]],["body/guards/WsJwtGuard.html",[0,0.095,3,0.316,4,0.268,5,0.268,8,1.096,10,0.367,11,1.12,17,0.821,19,1.12,20,0.039,21,0.821,22,0.502,23,0.734,25,0.818,27,0.531,28,1.481,29,1.209,30,0.536,31,0.316,32,1.587,46,1.409,50,0.018,51,0.025,52,0.018,70,1.854,80,1.481,99,0.914,103,2.086,105,1.481,106,2.451,107,2.03,109,2.887,119,2.26,120,1.854,121,2.577,122,2.451,123,2.451,124,1.096,130,2.109,132,1.711,133,1.336,134,2.451,135,2.028,138,3.355,141,4.113,158,1.096,190,1.336,199,0.818,277,2.109,301,1.829,421,3.292,608,2.538,609,2.887,610,2.969,611,2.451,612,4.983,613,2.969,614,4.064,615,4.983,616,2.969,617,2.969,618,2.969,619,2.969,620,2.969,621,2.451,622,2.969,623,2.969,624,2.969,625,2.969,626,2.451,627,2.451,628,2.969,629,2.969,630,2.969,631,4.634,632,2.969,633,2.969,634,2.969,635,2.969,636,4.064,637,4.064,638,2.969,639,2.969]],["title/classes/WssGateway.html",[0,0.096,492,1.503]],["body/classes/WssGateway.html",[0,0.099,2,1.538,3,0.328,4,0.278,5,0.278,8,1.54,10,0.381,11,1.149,17,1.101,19,0.85,20,0.038,21,0.623,22,0.381,23,0.557,25,1.302,26,2.358,27,0.503,30,0.557,31,0.328,46,1.268,50,0.019,51,0.026,52,0.019,80,1.538,190,1.877,200,1.538,236,1.924,244,2.605,301,2.453,384,4.6,421,3.596,492,2.081,537,2.605,588,2.963,626,3.442,627,3.442,640,2.545,641,4.725,642,4.725,643,4.725,644,4.17,645,5.062,646,3.442,647,3.442,648,3.083,649,3.083,650,4.725,651,3.083,652,4.17,653,3.083,654,3.083,655,3.083,656,3.083,657,2.545,658,2.191,659,3.083,660,3.083,661,3.083,662,3.083,663,5.062,664,4.17,665,3.083,666,4.17,667,4.17,668,4.17,669,4.17,670,3.083,671,3.083,672,3.083]],["title/modules/WssModule.html",[53,1.009,326,1.503]],["body/modules/WssModule.html",[0,0.13,3,0.434,4,0.368,5,0.368,20,0.037,27,0.531,30,0.736,31,0.434,50,0.025,51,0.031,52,0.025,53,1.808,55,1.659,56,1.833,57,2.264,58,2.264,59,1.833,60,2.774,61,2.999,66,2.774,67,2.264,68,2.264,326,2.878,492,2.995,673,3.361,674,3.361,675,4.072,676,4.072]],["title/coverage.html",[677,2.916]],["body/coverage.html",[0,0.167,1,1.867,5,0.27,6,2.468,7,2.468,15,2.124,20,0.038,22,0.37,46,0.909,50,0.018,51,0.025,52,0.018,59,1.346,76,1.867,99,1.214,100,1.867,102,2.468,107,1.218,121,1.662,132,1.104,142,1.867,143,2.901,144,1.867,145,2.901,147,2.124,174,1.867,187,1.662,188,2.468,189,2.468,226,1.662,227,2.468,231,2.271,232,1.346,234,2.468,236,1.218,246,2.271,247,1.867,248,2.468,291,1.492,329,2.124,333,2.468,359,2.124,360,2.468,376,2.468,377,1.867,378,2.468,466,2.124,483,2.468,492,1.492,537,3.803,575,2.468,608,1.867,609,2.124,611,2.468,640,2.468,658,2.124,677,2.124,678,2.99,679,2.99,680,2.99,681,3.371,682,5.627,683,5.528,684,2.99,685,2.99,686,2.99,687,2.99,688,4.083,689,2.468,690,4.083,691,4.083,692,2.99,693,4.65,694,4.083,695,2.99,696,2.99,697,3.371,698,2.468,699,2.99,700,2.468,701,3.304,702,2.468,703,4.65,704,2.99,705,2.99,706,2.99]],["title/dependencies.html",[56,1.63,707,2.518]],["body/dependencies.html",[0,0.156,20,0.038,30,0.711,50,0.024,51,0.03,52,0.024,56,1.771,72,1.963,75,3.248,79,3.248,80,1.963,118,4.032,120,2.458,221,2.437,222,1.963,245,2.437,516,3.248,591,3.248,657,3.248,708,5.712,709,3.935,710,4.884,711,3.935,712,3.935,713,3.935,714,3.935,715,3.935,716,3.935,717,3.935,718,3.248,719,3.935,720,3.935,721,3.935,722,3.935,723,3.935,724,3.935,725,3.248,726,3.935,727,3.935]],["title/miscellaneous/functions.html",[728,1.573,729,2.989]],["body/miscellaneous/functions.html",[10,0.581,20,0.033,50,0.029,51,0.033,52,0.029,59,2.58,701,3.339,728,2.935,729,3.879,730,3.879]],["title/index.html",[10,0.311,731,2.518,732,2.518]],["body/index.html",[4,0.289,20,0.036,24,2.647,50,0.02,51,0.026,52,0.02,55,1.306,98,2.647,104,2.003,119,1.783,129,1.443,235,2.003,236,1.306,245,1.6,542,2.278,647,2.647,677,2.278,725,2.647,733,3.206,734,3.206,735,4.281,736,3.206,737,3.206,738,3.206,739,3.206,740,3.206,741,3.206,742,3.206,743,3.206,744,3.206,745,3.206,746,4.281,747,3.206,748,4.281,749,5.143,750,3.206,751,3.206,752,3.206,753,3.206,754,3.206,755,3.206,756,3.206,757,3.206,758,3.206,759,3.206,760,3.206,761,3.206,762,2.647,763,3.206,764,3.206,765,3.206,766,3.206,767,4.281,768,4.819,769,3.206,770,3.206,771,3.206,772,3.206,773,4.819,774,5.628,775,3.206,776,3.206,777,3.206,778,3.206,779,5.513,780,3.206,781,3.206,782,4.281,783,3.206,784,3.206,785,4.819,786,3.206,787,4.281,788,3.206,789,3.206,790,3.206,791,3.534,792,4.281,793,4.281,794,3.206,795,3.206,796,3.206,797,3.206,798,3.206,799,3.206,800,3.206,801,3.206,802,3.206,803,3.206,804,3.206,805,3.206,806,3.206,807,3.206,808,3.206,809,3.206,810,3.206,811,3.206,812,3.206,813,3.206,814,3.206,815,3.206]],["title/modules.html",[55,1.672]],["body/modules.html",[20,0.033,50,0.028,51,0.033,52,0.028,54,2.802,55,1.827,64,2.494,65,2.494,326,2.238,791,4.793,816,5.807,817,5.807,818,5.807]],["title/overview.html",[819,3.388]],["body/overview.html",[2,1.882,20,0.037,50,0.023,51,0.029,52,0.023,53,1.264,54,3.598,55,1.537,56,1.698,57,2.098,58,2.098,59,1.698,60,2.098,61,2.098,62,3.114,63,3.114,64,3.252,65,3.252,66,2.646,67,2.098,68,2.098,94,1.882,101,1.698,107,2.123,128,3.114,233,2.68,291,2.6,323,3.114,324,3.114,325,3.114,326,2.815,453,3.114,455,3.114,492,2.73,608,2.356,673,3.114,674,3.114,819,3.114,820,3.773,821,4.758,822,3.773,823,3.773]],["title/miscellaneous/variables.html",[728,1.573,824,2.989]],["body/miscellaneous/variables.html",[10,0.287,15,2.423,20,0.039,21,0.469,22,0.721,23,0.419,32,1.037,39,1.29,46,1.037,50,0.014,51,0.021,52,0.014,88,3.208,91,2.785,115,1.449,119,1.29,121,2.249,126,2.815,127,1.914,129,1.82,130,1.648,132,1.755,139,2.526,149,1.648,151,1.648,158,1.259,159,1.648,170,1.044,183,1.914,191,1.896,192,1.535,193,1.449,194,1.702,195,1.896,196,1.535,197,2.018,199,1.561,209,1.29,232,1.044,235,1.449,239,2.479,242,1.914,243,1.914,244,2.13,295,1.449,329,2.423,361,1.29,362,1.29,363,1.449,364,1.648,466,2.423,541,2.423,588,3.821,621,1.914,646,4.784,658,2.423,681,1.914,689,1.914,697,1.914,698,3.338,700,1.914,701,1.648,702,2.815,718,2.815,728,1.449,730,2.815,762,2.815,824,1.914,825,2.319,826,3.41,827,3.41,828,2.319,829,2.319,830,2.319,831,2.319,832,5.544,833,3.41,834,2.319,835,3.41,836,2.319,837,2.319,838,2.319,839,2.319,840,2.319,841,2.319,842,2.319,843,2.319,844,2.319,845,2.319,846,3.41,847,3.41,848,2.319,849,2.319,850,2.319,851,2.319,852,2.319,853,2.319,854,2.319,855,2.319,856,2.319,857,2.319,858,2.319,859,2.319,860,2.319]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"modules/WssModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":537,"title":{},"body":{"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"classes/WssGateway.html":{},"coverage.html":{}}}],["0.2.3",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":128,"title":{},"body":{"injectables/AuthMiddleware.html":{},"overview.html":{}}}],["1.0.1",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":530,"title":{},"body":{"injectables/UsersService.html":{}}}],["100",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":569,"title":{},"body":{"injectables/UsersService.html":{}}}],["16",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":821,"title":{},"body":{"overview.html":{}}}],["2.0.3",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":224,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["20)@apimodelproperty",{"_index":212,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["200",{"_index":225,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["200)@apimodelproperty",{"_index":202,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["3.0.2",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":820,"title":{},"body":{"overview.html":{}}}],["4.0.4",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["4001",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["401",{"_index":437,"title":{},"body":{"controllers/UsersController.html":{}}}],["5",{"_index":823,"title":{},"body":{"overview.html":{}}}],["5.5.11",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":822,"title":{},"body":{"overview.html":{}}}],["6.1.2",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["6.2.4",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":563,"title":{},"body":{"injectables/UsersService.html":{}}}],["8",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["8.5.1",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["83",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["_error",{"_index":538,"title":{},"body":{"injectables/UsersService.html":{}}}],["_user",{"_index":435,"title":{},"body":{"controllers/UsersController.html":{}}}],["actualizar",{"_index":283,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["admin",{"_index":144,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["admin_role",{"_index":149,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"miscellaneous/variables.html":{}}}],["administrador",{"_index":168,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["amazing",{"_index":799,"title":{},"body":{"index.html":{}}}],["angular",{"_index":743,"title":{},"body":{"index.html":{}}}],["api",{"_index":746,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":298,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth()@apioperation({title",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibearerauth()@get('/:productid",{"_index":270,"title":{},"body":{"controllers/ProductController.html":{}}}],["apimodelproperty",{"_index":207,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{}}}],["apioperation",{"_index":422,"title":{},"body":{"controllers/UsersController.html":{}}}],["apioperation({title",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiusetags",{"_index":297,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["apiusetags('api",{"_index":299,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["app",{"_index":777,"title":{},"body":{"index.html":{}}}],["app_filter",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":740,"title":{},"body":{"index.html":{}}}],["apply(authmiddleware",{"_index":471,"title":{},"body":{"modules/UsersModule.html":{}}}],["apply(checkadminrolemiddleware",{"_index":481,"title":{},"body":{"modules/UsersModule.html":{}}}],["apply(checkrolemiddleware",{"_index":482,"title":{},"body":{"modules/UsersModule.html":{}}}],["appmodule",{"_index":54,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":586,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array",{"_index":606,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["arreglar",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":103,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{}}}],["auth",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.middleware",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":750,"title":{},"body":{"index.html":{}}}],["authheaders",{"_index":125,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authmiddleware",{"_index":100,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["author",{"_index":808,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":141,"title":{},"body":{"injectables/AuthMiddleware.html":{},"guards/WsJwtGuard.html":{}}}],["authservice",{"_index":619,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["authtoken",{"_index":631,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["avatar",{"_index":361,"title":{},"body":{"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":133,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{}}}],["backers",{"_index":800,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":289,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception('no",{"_index":592,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["badrequestexception(`el",{"_index":524,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(error",{"_index":307,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["bash",{"_index":773,"title":{},"body":{"index.html":{}}}],["bcrypt.hashsync(dto.password",{"_index":529,"title":{},"body":{"injectables/UsersService.html":{}}}],["best",{"_index":763,"title":{},"body":{"index.html":{}}}],["bio",{"_index":362,"title":{},"body":{"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":285,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":209,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["boolean(user",{"_index":639,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["bootstrap",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":818,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":816,"title":{},"body":{"modules.html":{}}}],["builderror",{"_index":576,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["builderror(errors",{"_index":579,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["building",{"_index":736,"title":{},"body":{"index.html":{}}}],["builduserro",{"_index":484,"title":{},"body":{"injectables/UsersService.html":{}}}],["builduserro(user",{"_index":495,"title":{},"body":{"injectables/UsersService.html":{}}}],["canactivate",{"_index":612,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["canactivate(context",{"_index":614,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["case",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch((error",{"_index":306,"title":{},"body":{"controllers/ProductController.html":{}}}],["catch(error",{"_index":312,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["catch(exception",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["checkadminrolemiddleware",{"_index":142,"title":{"injectables/CheckAdminRoleMiddleware.html":{}},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["checking",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkrolemiddleware",{"_index":174,"title":{"injectables/CheckRoleMiddleware.html":{}},"body":{"injectables/CheckRoleMiddleware.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{},"classes/WssGateway.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"modules/WssModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{},"classes/WssGateway.html":{},"overview.html":{}}}],["client",{"_index":627,"title":{},"body":{"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{}}}],["client.emit('connection",{"_index":670,"title":{},"body":{"classes/WssGateway.html":{}}}],["client.handshake.headers.cookie.split",{"_index":630,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["cliente",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{}}}],["clients",{"_index":668,"title":{},"body":{"classes/WssGateway.html":{}}}],["cluster_appmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":323,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":324,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":325,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":453,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":454,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":455,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_wssmodule",{"_index":673,"title":{},"body":{"modules/WssModule.html":{},"overview.html":{}}}],["cluster_wssmodule_exports",{"_index":674,"title":{},"body":{"modules/WssModule.html":{},"overview.html":{}}}],["coding",{"_index":764,"title":{},"body":{"index.html":{}}}],["con",{"_index":267,"title":{},"body":{"controllers/ProductController.html":{}}}],["config",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/UsersService.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"dependencies.html":{}}}],["configmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.load(path.resolve(__dirname",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":458,"title":{},"body":{"modules/UsersModule.html":{}}}],["configure(consumer",{"_index":459,"title":{},"body":{"modules/UsersModule.html":{}}}],["connected",{"_index":666,"title":{},"body":{"classes/WssGateway.html":{}}}],["console.log('decorador",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('es",{"_index":157,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{}}}],["console.log('invalido",{"_index":184,"title":{},"body":{"injectables/CheckRoleMiddleware.html":{}}}],["console.log('no",{"_index":163,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{}}}],["console.log('valido",{"_index":181,"title":{},"body":{"injectables/CheckRoleMiddleware.html":{}}}],["const",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"miscellaneous/variables.html":{}}}],["constraint[0",{"_index":603,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["constraint[1",{"_index":604,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":105,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"guards/WsJwtGuard.html":{}}}],["constructor(private",{"_index":123,"title":{},"body":{"injectables/AuthMiddleware.html":{},"guards/WsJwtGuard.html":{}}}],["constructor(productmodel",{"_index":335,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(usermodel",{"_index":490,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":106,"title":{},"body":{"injectables/AuthMiddleware.html":{},"guards/WsJwtGuard.html":{}}}],["consumer",{"_index":462,"title":{},"body":{"modules/UsersModule.html":{}}}],["context",{"_index":617,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["context.switchtows().getclient",{"_index":628,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["context.switchtows().getdata().user",{"_index":638,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["controller",{"_index":246,"title":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('product",{"_index":300,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('user",{"_index":423,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controllers/product/product.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/users/users.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/users/users.service",{"_index":122,"title":{},"body":{"injectables/AuthMiddleware.html":{},"guards/WsJwtGuard.html":{}}}],["cookie.startswith('token')).split('=')[1",{"_index":633,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["cookies",{"_index":629,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["cookies.find(cookie",{"_index":632,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["coverage",{"_index":677,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crear",{"_index":259,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["create",{"_index":485,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(dto",{"_index":497,"title":{},"body":{"injectables/UsersService.html":{}}}],["created",{"_index":433,"title":{},"body":{"controllers/UsersController.html":{}}}],["createdat",{"_index":191,"title":{},"body":{"classes/CreateUserDTO.html":{},"interfaces/Product.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["createparamdecorator((data",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpost",{"_index":250,"title":{},"body":{"controllers/ProductController.html":{}}}],["createpost(res",{"_index":255,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproduct",{"_index":334,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproduct(createproductdto",{"_index":339,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproductdto",{"_index":256,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["createuserdto",{"_index":187,"title":{"classes/CreateUserDTO.html":{}},"body":{"classes/CreateUserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creating",{"_index":534,"title":{},"body":{"injectables/UsersService.html":{}}}],["crypto",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["crypto.createhmac('sha256",{"_index":531,"title":{},"body":{"injectables/UsersService.html":{}}}],["ctx",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getrequest",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["custom",{"_index":618,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["d).{ts,js",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["data",{"_index":541,"title":{},"body":{"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":759,"title":{},"body":{"index.html":{}}}],["date",{"_index":197,"title":{},"body":{"classes/CreateUserDTO.html":{},"interfaces/Product.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["date().toisostring",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["date(today",{"_index":561,"title":{},"body":{"injectables/UsersService.html":{}}}],["date.now",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datos",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["de",{"_index":277,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{},"guards/WsJwtGuard.html":{}}}],["declarations",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{},"overview.html":{}}}],["decoded",{"_index":130,"title":{},"body":{"injectables/AuthMiddleware.html":{},"guards/WsJwtGuard.html":{},"miscellaneous/variables.html":{}}}],["decoded.user",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoded[data",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":200,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"controllers/ProductController.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"classes/WssGateway.html":{}}}],["default",{"_index":646,"title":{},"body":{"classes/WssGateway.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{}}}],["delete",{"_index":268,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["delete('/delete",{"_index":264,"title":{},"body":{"controllers/ProductController.html":{}}}],["delete('/delete/:userid",{"_index":449,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":318,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["deleted_product",{"_index":357,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleted_user",{"_index":450,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteproduct",{"_index":251,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["deleteproduct(productid",{"_index":342,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteproduct(res",{"_index":262,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteuser",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(res",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(userid",{"_index":500,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":56,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":235,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Users.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":778,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["different",{"_index":757,"title":{},"body":{"index.html":{}}}],["disconnected",{"_index":672,"title":{},"body":{"classes/WssGateway.html":{}}}],["document",{"_index":241,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Users.html":{}}}],["documentation",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":499,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.email",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.modifiedat",{"_index":533,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.password",{"_index":528,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.password).digest('hex",{"_index":532,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.username",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/create",{"_index":415,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/login.dto",{"_index":418,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/product.dto",{"_index":290,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["e2e",{"_index":788,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":737,"title":{},"body":{"index.html":{}}}],["ejecutar",{"_index":154,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["el",{"_index":183,"title":{},"body":{"injectables/CheckRoleMiddleware.html":{},"miscellaneous/variables.html":{}}}],["el.property",{"_index":600,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["eliminar",{"_index":266,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["email",{"_index":192,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":162,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["errors",{"_index":169,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["errors.foreach(el",{"_index":598,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":536,"title":{},"body":{"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["es",{"_index":151,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"miscellaneous/variables.html":{}}}],["eso",{"_index":173,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["est",{"_index":526,"title":{},"body":{"injectables/UsersService.html":{}}}],["etc",{"_index":620,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["exception",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"index.html":{}}}],["exception.filter",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["exception.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:6",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["executioncontext",{"_index":615,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["exist",{"_index":314,"title":{},"body":{"controllers/ProductController.html":{},"injectables/UsersService.html":{}}}],["exists",{"_index":448,"title":{},"body":{"controllers/UsersController.html":{}}}],["exp",{"_index":560,"title":{},"body":{"injectables/UsersService.html":{}}}],["exp.gettime",{"_index":568,"title":{},"body":{"injectables/UsersService.html":{}}}],["exp.setdate(today.getdate",{"_index":562,"title":{},"body":{"injectables/UsersService.html":{}}}],["export",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"modules/WssModule.html":{}}}],["exports",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{},"overview.html":{}}}],["express",{"_index":118,"title":{},"body":{"injectables/AuthMiddleware.html":{},"dependencies.html":{}}}],["extended",{"_index":237,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Users.html":{}}}],["extends",{"_index":240,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Users.html":{}}}],["failed",{"_index":543,"title":{},"body":{"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["false",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":744,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"modules/WssModule.html":{},"coverage.html":{}}}],["filter",{"_index":753,"title":{},"body":{"index.html":{}}}],["findbyemail",{"_index":486,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":502,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":487,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(id",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{}}}],["findme",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{}}}],["findme(email",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone",{"_index":488,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(loginuserdto",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["findoneoptions",{"_index":548,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":363,"title":{},"body":{"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["fixme",{"_index":621,"title":{},"body":{"guards/WsJwtGuard.html":{},"miscellaneous/variables.html":{}}}],["forroutes",{"_index":472,"title":{},"body":{"modules/UsersModule.html":{}}}],["found",{"_index":137,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UsersController.html":{}}}],["framework",{"_index":735,"title":{},"body":{"index.html":{}}}],["function",{"_index":147,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":729,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":491,"title":{},"body":{"injectables/UsersService.html":{}}}],["generatejwt",{"_index":489,"title":{},"body":{"injectables/UsersService.html":{}}}],["generatejwt(user",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/:productid",{"_index":309,"title":{},"body":{"controllers/ProductController.html":{}}}],["get('/:userid",{"_index":442,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/list",{"_index":274,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["get('myinfo",{"_index":428,"title":{},"body":{"controllers/UsersController.html":{}}}],["getproduct",{"_index":252,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["getproduct(productid",{"_index":344,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproduct(res",{"_index":269,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproducts",{"_index":253,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["getproducts(res",{"_index":273,"title":{},"body":{"controllers/ProductController.html":{}}}],["getting",{"_index":731,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuser(res",{"_index":399,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(userid",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["getusers",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getusers(res",{"_index":402,"title":{},"body":{"controllers/UsersController.html":{}}}],["grow",{"_index":796,"title":{},"body":{"index.html":{}}}],["guard",{"_index":608,"title":{"guards/WsJwtGuard.html":{}},"body":{"guards/WsJwtGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":610,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["ha",{"_index":624,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["hacer",{"_index":172,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["handleconnection",{"_index":644,"title":{},"body":{"classes/WssGateway.html":{}}}],["handleconnection(client",{"_index":652,"title":{},"body":{"classes/WssGateway.html":{}}}],["handledisconnect",{"_index":645,"title":{},"body":{"classes/WssGateway.html":{}}}],["heavily",{"_index":741,"title":{},"body":{"index.html":{}}}],["here",{"_index":805,"title":{},"body":{"index.html":{}}}],["host",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["http://localhost",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{}}}],["httpexception('guard",{"_index":637,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["httpexception('not",{"_index":140,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["httpexception('user",{"_index":136,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["https://localhost:${wss_port",{"_index":662,"title":{},"body":{"classes/WssGateway.html":{}}}],["https://nestjs.com",{"_index":812,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{}}}],["httpstatus.bad_request",{"_index":544,"title":{},"body":{"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["httpstatus.internal_server_error",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.unauthorized",{"_index":138,"title":{},"body":{"injectables/AuthMiddleware.html":{},"guards/WsJwtGuard.html":{}}}],["id",{"_index":178,"title":{},"body":{"injectables/CheckRoleMiddleware.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@delete('/delete/:userid",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{}}}],["id'})@get('/:userid",{"_index":400,"title":{},"body":{"controllers/UsersController.html":{}}}],["id'})@put('/update/:userid",{"_index":413,"title":{},"body":{"controllers/UsersController.html":{}}}],["id.pipe",{"_index":296,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["identifier",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["imageurl",{"_index":242,"title":{},"body":{"interfaces/Product.html":{},"miscellaneous/variables.html":{}}}],["implemented",{"_index":767,"title":{},"body":{"index.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"modules/WssModule.html":{}}}],["imports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"guards/WsJwtGuard.html":{}}}],["incorrecto",{"_index":167,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"modules/WssModule.html":{}}}],["informacion",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{}}}],["injectable",{"_index":99,"title":{"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":101,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectmodel",{"_index":349,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["injectmodel('product",{"_index":351,"title":{},"body":{"injectables/ProductService.html":{}}}],["injectmodel('user",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{}}}],["input",{"_index":539,"title":{},"body":{"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["inspired",{"_index":742,"title":{},"body":{"index.html":{}}}],["install",{"_index":775,"title":{},"body":{"index.html":{}}}],["installation",{"_index":772,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["integration",{"_index":749,"title":{},"body":{"index.html":{}}}],["interface",{"_index":231,"title":{"interfaces/Product.html":{},"interfaces/Users.html":{}},"body":{"interfaces/Product.html":{},"interfaces/Users.html":{},"coverage.html":{}}}],["interfaces",{"_index":233,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Users.html":{},"overview.html":{}}}],["interfaces/product.interface",{"_index":350,"title":{},"body":{"injectables/ProductService.html":{}}}],["interfaces/users.interface",{"_index":420,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["isboolean",{"_index":217,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{}}}],["isdate",{"_index":215,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{}}}],["isemail",{"_index":218,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{}}}],["isnotempty",{"_index":216,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{}}}],["isnotempty()@isemail()@length(3",{"_index":201,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isnotempty()@isstring()@apimodelproperty",{"_index":205,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isnotempty()@isstring()@length(3",{"_index":211,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring",{"_index":214,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{}}}],["join",{"_index":802,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":120,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UsersService.html":{},"guards/WsJwtGuard.html":{},"dependencies.html":{}}}],["jwt",{"_index":119,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UsersService.html":{},"guards/WsJwtGuard.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign",{"_index":564,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwt.verify(authtoken",{"_index":635,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["jwt.verify(token",{"_index":131,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["jwt.verify(token[1",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kamil",{"_index":809,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":364,"title":{},"body":{"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{},"overview.html":{}}}],["length",{"_index":219,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{}}}],["length(3",{"_index":223,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["library",{"_index":761,"title":{},"body":{"index.html":{}}}],["license",{"_index":815,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":793,"title":{},"body":{"index.html":{}}}],["lista",{"_index":276,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["listenig",{"_index":661,"title":{},"body":{"classes/WssGateway.html":{}}}],["loaded",{"_index":426,"title":{},"body":{"controllers/UsersController.html":{}}}],["logger",{"_index":421,"title":{},"body":{"controllers/UsersController.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{}}}],["logger('user",{"_index":424,"title":{},"body":{"controllers/UsersController.html":{}}}],["logger('wss",{"_index":626,"title":{},"body":{"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{}}}],["login",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{}}}],["login(res",{"_index":405,"title":{},"body":{"controllers/UsersController.html":{}}}],["loginuserdto",{"_index":226,"title":{"classes/LoginUserDTO.html":{}},"body":{"classes/LoginUserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["loginuserdto.email",{"_index":549,"title":{},"body":{"injectables/UsersService.html":{}}}],["loginuserdto.password).digest('hex",{"_index":550,"title":{},"body":{"injectables/UsersService.html":{}}}],["loginuserdto.username",{"_index":551,"title":{},"body":{"injectables/UsersService.html":{}}}],["los",{"_index":155,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["management",{"_index":754,"title":{},"body":{"index.html":{}}}],["manda",{"_index":182,"title":{},"body":{"injectables/CheckRoleMiddleware.html":{}}}],["mandaremos",{"_index":161,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{}}}],["matching",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"modules/WssModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":220,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{}}}],["mensaje",{"_index":166,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["message",{"_index":170,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":585,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["metatype",{"_index":583,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["method",{"_index":473,"title":{},"body":{"modules/UsersModule.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{}}}],["mi",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["middleware",{"_index":752,"title":{},"body":{"index.html":{}}}],["middlewareconsumer",{"_index":460,"title":{},"body":{"modules/UsersModule.html":{}}}],["miscellaneous",{"_index":728,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismo",{"_index":186,"title":{},"body":{"injectables/CheckRoleMiddleware.html":{}}}],["mit",{"_index":792,"title":{},"body":{"index.html":{}}}],["mode",{"_index":782,"title":{},"body":{"index.html":{}}}],["model",{"_index":336,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["modificar",{"_index":281,"title":{},"body":{"controllers/ProductController.html":{}}}],["modifiedat",{"_index":193,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":53,"title":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{},"overview.html":{}}}],["modules",{"_index":55,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":622,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["mongodb",{"_index":762,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":245,"title":{},"body":{"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["mongoosemodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":332,"title":{},"body":{"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost:27017/nestjs",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":748,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":810,"title":{},"body":{"index.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":768,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":814,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"modules/WssModule.html":{},"dependencies.html":{}}}],["nestjs/common/exceptions/http.exception",{"_index":116,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["nestjs/core",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":222,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"controllers/ProductController.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":657,"title":{},"body":{"classes/WssGateway.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":117,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["nestmodule",{"_index":464,"title":{},"body":{"modules/UsersModule.html":{}}}],["new",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":112,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["nextfunction",{"_index":113,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["ni",{"_index":185,"title":{},"body":{"injectables/CheckRoleMiddleware.html":{}}}],["node.js",{"_index":734,"title":{},"body":{"index.html":{}}}],["nosql",{"_index":760,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":287,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["notfoundexception(`product",{"_index":313,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["npm",{"_index":774,"title":{},"body":{"index.html":{}}}],["null",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":244,"title":{},"body":{"interfaces/Product.html":{},"injectables/ValidationPipe.html":{},"classes/WssGateway.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":282,"title":{},"body":{"controllers/ProductController.html":{}}}],["object",{"_index":295,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["object.entries(el.constraints).foreach(constraint",{"_index":601,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["obtener",{"_index":272,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["ok",{"_index":165,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["ongatewayconnection",{"_index":641,"title":{},"body":{"classes/WssGateway.html":{}}}],["ongatewaydisconnect",{"_index":642,"title":{},"body":{"classes/WssGateway.html":{}}}],["onmoduleinit",{"_index":384,"title":{},"body":{"controllers/UsersController.html":{},"classes/WssGateway.html":{}}}],["open",{"_index":794,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{},"overview.html":{}}}],["overview",{"_index":819,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":707,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":286,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["param('productid",{"_index":310,"title":{},"body":{"controllers/ProductController.html":{}}}],["param('userid",{"_index":443,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{}}}],["password",{"_index":194,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["permitido",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipes",{"_index":755,"title":{},"body":{"index.html":{}}}],["pipetransform",{"_index":589,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":590,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":595,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":803,"title":{},"body":{"index.html":{}}}],["por",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{}}}],["port",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":261,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["post('/create",{"_index":257,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["post('/login",{"_index":434,"title":{},"body":{"controllers/UsersController.html":{}}}],["practices",{"_index":765,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":249,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":243,"title":{},"body":{"interfaces/Product.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":301,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{}}}],["probado",{"_index":625,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["procesos",{"_index":156,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["process.env.server_port",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product",{"_index":232,"title":{"interfaces/Product.html":{}},"body":{"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.controller",{"_index":328,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.save",{"_index":353,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.service",{"_index":292,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product_created",{"_index":302,"title":{},"body":{"controllers/ProductController.html":{}}}],["product_deleted",{"_index":316,"title":{},"body":{"controllers/ProductController.html":{}}}],["productcontroller",{"_index":247,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":263,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["production",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["productmodel",{"_index":338,"title":{},"body":{"injectables/ProductService.html":{}}}],["productmodule",{"_index":64,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["producto",{"_index":260,"title":{},"body":{"controllers/ProductController.html":{}}}],["products",{"_index":238,"title":{},"body":{"interfaces/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["productschema",{"_index":329,"title":{},"body":{"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":291,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":733,"title":{},"body":{"index.html":{}}}],["project",{"_index":795,"title":{},"body":{"index.html":{}}}],["promise",{"_index":341,"title":{},"body":{"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":599,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["properties",{"_index":190,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{}}}],["protected",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{},"overview.html":{}}}],["public",{"_index":457,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["puede",{"_index":171,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["purposes",{"_index":758,"title":{},"body":{"index.html":{}}}],["put",{"_index":284,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["put('/update",{"_index":279,"title":{},"body":{"controllers/ProductController.html":{}}}],["put('/update/:userid",{"_index":445,"title":{},"body":{"controllers/UsersController.html":{}}}],["que",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query",{"_index":288,"title":{},"body":{"controllers/ProductController.html":{}}}],["query('productid",{"_index":315,"title":{},"body":{"controllers/ProductController.html":{}}}],["querystring",{"_index":177,"title":{},"body":{"injectables/CheckRoleMiddleware.html":{}}}],["read",{"_index":804,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":124,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"guards/WsJwtGuard.html":{}}}],["ready",{"_index":747,"title":{},"body":{"index.html":{}}}],["register",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{}}}],["register(res",{"_index":409,"title":{},"body":{"controllers/UsersController.html":{}}}],["registrado",{"_index":527,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":771,"title":{},"body":{"index.html":{}}}],["req",{"_index":115,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.headers.authorization",{"_index":126,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.params.userid",{"_index":179,"title":{},"body":{"injectables/CheckRoleMiddleware.html":{}}}],["req.user",{"_index":139,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.user[data",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{}}}],["request.url",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["requestmethod",{"_index":463,"title":{},"body":{"modules/UsersModule.html":{}}}],["requestmethod.delete",{"_index":480,"title":{},"body":{"modules/UsersModule.html":{}}}],["requestmethod.get",{"_index":474,"title":{},"body":{"modules/UsersModule.html":{}}}],["requestmethod.put",{"_index":478,"title":{},"body":{"modules/UsersModule.html":{}}}],["required",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":111,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["res.status(401).json",{"_index":164,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["res.status(httpstatus.accepted).json",{"_index":452,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.status(httpstatus.created).json",{"_index":304,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":308,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{},"overview.html":{}}}],["response",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{}}}],["response.status(status).json",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["restapi",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["restful",{"_index":745,"title":{},"body":{"index.html":{}}}],["result",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"modules/WssModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result[prop",{"_index":602,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["results",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"modules/WssModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":158,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{}}}],["rimraf",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":195,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["role.middleware",{"_index":470,"title":{},"body":{"modules/UsersModule.html":{}}}],["role.middleware.ts",{"_index":145,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"coverage.html":{}}}],["role.middleware.ts:5",{"_index":146,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{}}}],["role.middleware.ts:6",{"_index":175,"title":{},"body":{"injectables/CheckRoleMiddleware.html":{}}}],["roles",{"_index":751,"title":{},"body":{"index.html":{}}}],["roles_validos",{"_index":698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":779,"title":{},"body":{"index.html":{}}}],["running",{"_index":776,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":738,"title":{},"body":{"index.html":{}}}],["schema",{"_index":239,"title":{},"body":{"interfaces/Product.html":{},"modules/ProductModule.html":{},"interfaces/Users.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["schemas/product.schema",{"_index":330,"title":{},"body":{"modules/ProductModule.html":{}}}],["schemas/users.schema",{"_index":467,"title":{},"body":{"modules/UsersModule.html":{}}}],["se",{"_index":623,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["secret",{"_index":121,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UsersService.html":{},"guards/WsJwtGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["secretisimo",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":647,"title":{},"body":{"classes/WssGateway.html":{},"index.html":{}}}],["set",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared/filters/all",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/gateways/wss.gateway",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["shared/gateways/wss.module",{"_index":331,"title":{},"body":{"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["shared/middlewares/auth.middleware",{"_index":468,"title":{},"body":{"modules/UsersModule.html":{}}}],["shared/middlewares/check",{"_index":469,"title":{},"body":{"modules/UsersModule.html":{}}}],["shared/pipes/validate",{"_index":294,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["shared/pipes/validation.pipe",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["si",{"_index":150,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["side",{"_index":739,"title":{},"body":{"index.html":{}}}],["socket.io",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"modules/WssModule.html":{},"index.html":{}}}],["sponsors",{"_index":798,"title":{},"body":{"index.html":{}}}],["src/.../config.ts",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":730,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../product.schema.ts",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.decorator.ts",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.schema.ts",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config.ts",{"_index":681,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/controllers/product/interfaces/product.interface.ts",{"_index":234,"title":{},"body":{"interfaces/Product.html":{},"coverage.html":{}}}],["src/controllers/product/product.controller.ts",{"_index":248,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/controllers/product/product.controller.ts:125",{"_index":280,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/controllers/product/product.controller.ts:37",{"_index":258,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/controllers/product/product.controller.ts:54",{"_index":275,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/controllers/product/product.controller.ts:75",{"_index":271,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/controllers/product/product.controller.ts:99",{"_index":265,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/controllers/product/product.module.ts",{"_index":327,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/controllers/product/product.service.ts",{"_index":333,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/controllers/product/product.service.ts:15",{"_index":340,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/controllers/product/product.service.ts:21",{"_index":345,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/controllers/product/product.service.ts:26",{"_index":346,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/controllers/product/product.service.ts:31",{"_index":348,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/controllers/product/product.service.ts:36",{"_index":343,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/controllers/product/product.service.ts:9",{"_index":337,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/controllers/product/schemas/product.schema.ts",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/controllers/users/dto/create",{"_index":188,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["src/controllers/users/dto/login.dto.ts",{"_index":227,"title":{},"body":{"classes/LoginUserDTO.html":{},"coverage.html":{}}}],["src/controllers/users/dto/login.dto.ts:10",{"_index":228,"title":{},"body":{"classes/LoginUserDTO.html":{}}}],["src/controllers/users/dto/login.dto.ts:13",{"_index":229,"title":{},"body":{"classes/LoginUserDTO.html":{}}}],["src/controllers/users/dto/login.dto.ts:7",{"_index":230,"title":{},"body":{"classes/LoginUserDTO.html":{}}}],["src/controllers/users/dto/users.dto.ts",{"_index":360,"title":{},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["src/controllers/users/dto/users.dto.ts:11",{"_index":370,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/controllers/users/dto/users.dto.ts:14",{"_index":375,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/controllers/users/dto/users.dto.ts:17",{"_index":368,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/controllers/users/dto/users.dto.ts:20",{"_index":372,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/controllers/users/dto/users.dto.ts:23",{"_index":365,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/controllers/users/dto/users.dto.ts:26",{"_index":366,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/controllers/users/dto/users.dto.ts:29",{"_index":373,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/controllers/users/dto/users.dto.ts:32",{"_index":367,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/controllers/users/dto/users.dto.ts:35",{"_index":371,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/controllers/users/dto/users.dto.ts:38",{"_index":374,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/controllers/users/dto/users.dto.ts:8",{"_index":369,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/controllers/users/interfaces/users.interface.ts",{"_index":376,"title":{},"body":{"interfaces/Users.html":{},"coverage.html":{}}}],["src/controllers/users/schemas/users.schema.ts",{"_index":697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/controllers/users/users.controller.ts",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/controllers/users/users.controller.ts:111",{"_index":414,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controllers/users/users.controller.ts:131",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controllers/users/users.controller.ts:37",{"_index":408,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controllers/users/users.controller.ts:43",{"_index":398,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controllers/users/users.controller.ts:51",{"_index":411,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controllers/users/users.controller.ts:64",{"_index":407,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controllers/users/users.controller.ts:86",{"_index":404,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controllers/users/users.controller.ts:98",{"_index":401,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controllers/users/users.decorator.ts",{"_index":700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/controllers/users/users.module.ts",{"_index":456,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/controllers/users/users.module.ts:25",{"_index":461,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/controllers/users/users.service.ts",{"_index":483,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/controllers/users/users.service.ts:109",{"_index":496,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/controllers/users/users.service.ts:15",{"_index":493,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/controllers/users/users.service.ts:22",{"_index":498,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/controllers/users/users.service.ts:46",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/controllers/users/users.service.ts:64",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/controllers/users/users.service.ts:69",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/controllers/users/users.service.ts:74",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/controllers/users/users.service.ts:79",{"_index":501,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/controllers/users/users.service.ts:85",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/controllers/users/users.service.ts:91",{"_index":503,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/controllers/users/users.service.ts:96",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/main.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filters/all",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/shared/gateways/wss.gateway.ts",{"_index":640,"title":{},"body":{"classes/WssGateway.html":{},"coverage.html":{}}}],["src/shared/gateways/wss.gateway.ts:12",{"_index":651,"title":{},"body":{"classes/WssGateway.html":{}}}],["src/shared/gateways/wss.gateway.ts:13",{"_index":649,"title":{},"body":{"classes/WssGateway.html":{}}}],["src/shared/gateways/wss.gateway.ts:14",{"_index":648,"title":{},"body":{"classes/WssGateway.html":{}}}],["src/shared/gateways/wss.gateway.ts:16",{"_index":655,"title":{},"body":{"classes/WssGateway.html":{}}}],["src/shared/gateways/wss.gateway.ts:20",{"_index":653,"title":{},"body":{"classes/WssGateway.html":{}}}],["src/shared/gateways/wss.gateway.ts:28",{"_index":654,"title":{},"body":{"classes/WssGateway.html":{}}}],["src/shared/gateways/wss.guard.ts",{"_index":611,"title":{},"body":{"guards/WsJwtGuard.html":{},"coverage.html":{}}}],["src/shared/gateways/wss.guard.ts:14",{"_index":613,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["src/shared/gateways/wss.guard.ts:18",{"_index":616,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["src/shared/gateways/wss.module.ts",{"_index":675,"title":{},"body":{"modules/WssModule.html":{}}}],["src/shared/middlewares/auth.middleware.ts",{"_index":102,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/shared/middlewares/auth.middleware.ts:12",{"_index":114,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/shared/middlewares/auth.middleware.ts:9",{"_index":108,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/shared/middlewares/check",{"_index":143,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"coverage.html":{}}}],["src/shared/pipes/validation.pipe.ts",{"_index":575,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/shared/pipes/validation.pipe.ts:26",{"_index":580,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/shared/pipes/validation.pipe.ts:37",{"_index":582,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/shared/pipes/validation.pipe.ts:8",{"_index":587,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["start",{"_index":780,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":783,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":784,"title":{},"body":{"index.html":{}}}],["started",{"_index":732,"title":{"index.html":{}},"body":{}}],["starter",{"_index":770,"title":{},"body":{"index.html":{}}}],["statements",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["stay",{"_index":806,"title":{},"body":{"index.html":{}}}],["still",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":199,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"miscellaneous/variables.html":{}}}],["string(this.users",{"_index":669,"title":{},"body":{"classes/WssGateway.html":{}}}],["string(user.id",{"_index":180,"title":{},"body":{"injectables/CheckRoleMiddleware.html":{}}}],["string).split",{"_index":127,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["string).split('=')[1",{"_index":634,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["stringify",{"_index":176,"title":{},"body":{"injectables/CheckRoleMiddleware.html":{}}}],["submitted",{"_index":593,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["successful",{"_index":439,"title":{},"body":{"controllers/UsersController.html":{}}}],["successfully",{"_index":319,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":791,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":817,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":725,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["table",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":785,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":790,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":789,"title":{},"body":{"index.html":{}}}],["tests",{"_index":787,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":797,"title":{},"body":{"index.html":{}}}],["this.builderror(errors",{"_index":597,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.builduserro(user",{"_index":558,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.gateway.wss.emit('nuevousuario",{"_index":547,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.generatejwt(user",{"_index":574,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.error('guard",{"_index":636,"title":{},"body":{"guards/WsJwtGuard.html":{}}}],["this.logger.log('client",{"_index":671,"title":{},"body":{"classes/WssGateway.html":{}}}],["this.logger.log('new",{"_index":665,"title":{},"body":{"classes/WssGateway.html":{}}}],["this.logger.log('user",{"_index":425,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.logger.log(`actived",{"_index":667,"title":{},"body":{"classes/WssGateway.html":{}}}],["this.logger.log(`websockets",{"_index":660,"title":{},"body":{"classes/WssGateway.html":{}}}],["this.productmodel(createproductdto",{"_index":352,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.find",{"_index":355,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findbyid(productid",{"_index":354,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findbyidanddelete(productid",{"_index":358,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findbyidandupdate(productid",{"_index":356,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.createproduct(createproductdto",{"_index":303,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.deleteproduct(productid",{"_index":317,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.getproduct(productid",{"_index":311,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.getproducts",{"_index":305,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.updateproduct(productid",{"_index":321,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.tovalidate(metatype",{"_index":594,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.usermodel(dto",{"_index":545,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find",{"_index":553,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":557,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(userid",{"_index":554,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidandupdate(userid",{"_index":555,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone(findoneoptions",{"_index":552,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findoneanddelete(userid",{"_index":556,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users",{"_index":663,"title":{},"body":{"classes/WssGateway.html":{}}}],["this.userservice.create(createuserdto",{"_index":432,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.deleteuser(userid",{"_index":451,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findbyemail(email",{"_index":430,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findbyid(decoded.id",{"_index":134,"title":{},"body":{"injectables/AuthMiddleware.html":{},"guards/WsJwtGuard.html":{}}}],["this.userservice.findone(loginuserdto",{"_index":436,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.generatejwt(_user",{"_index":438,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getuser(userid",{"_index":444,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getusers",{"_index":441,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.updateuser(userid",{"_index":447,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.wss.emit('activeusers",{"_index":664,"title":{},"body":{"classes/WssGateway.html":{}}}],["throw",{"_index":135,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{}}}],["timestamp",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["title",{"_index":427,"title":{},"body":{"controllers/UsersController.html":{}}}],["today",{"_index":559,"title":{},"body":{"injectables/UsersService.html":{}}}],["token",{"_index":129,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["token[1",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":807,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":577,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":581,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":578,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":584,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":591,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":813,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"guards/WsJwtGuard.html":{},"classes/WssGateway.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":605,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.find((type",{"_index":607,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":769,"title":{},"body":{"index.html":{}}}],["ui",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":159,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"controllers/ProductController.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":718,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":786,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["updated",{"_index":322,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["updated_product",{"_index":320,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["updated_user",{"_index":446,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateproduct",{"_index":254,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["updateproduct(productid",{"_index":347,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateproduct(res",{"_index":278,"title":{},"body":{"controllers/ProductController.html":{}}}],["updateuser",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuser(res",{"_index":412,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuser(userid",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["use",{"_index":104,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"index.html":{}}}],["use(req",{"_index":110,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["useclass",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["usecreateindex",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["usefindandmodify",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["usenewurlparser",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":132,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"guards/WsJwtGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user('email",{"_index":429,"title":{},"body":{"controllers/UsersController.html":{}}}],["user._id",{"_index":571,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.avatar",{"_index":573,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.bio",{"_index":572,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto",{"_index":416,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":189,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":213,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:16",{"_index":203,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:21",{"_index":206,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:24",{"_index":208,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:26",{"_index":198,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:28",{"_index":204,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:31",{"_index":210,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.email",{"_index":567,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":565,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.role",{"_index":148,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"injectables/UsersService.html":{}}}],["user.save",{"_index":546,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.username",{"_index":566,"title":{},"body":{"injectables/UsersService.html":{}}}],["user/:userid",{"_index":476,"title":{},"body":{"modules/UsersModule.html":{}}}],["user/delete/:userid",{"_index":479,"title":{},"body":{"modules/UsersModule.html":{}}}],["user/list",{"_index":475,"title":{},"body":{"modules/UsersModule.html":{}}}],["user/update/:userid",{"_index":477,"title":{},"body":{"modules/UsersModule.html":{}}}],["user_exist",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["user_registered",{"_index":431,"title":{},"body":{"controllers/UsersController.html":{}}}],["user_role",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userdto",{"_index":359,"title":{"classes/UserDTO.html":{}},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["userid",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usermodel",{"_index":494,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":196,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["userro",{"_index":570,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":236,"title":{"interfaces/Users.html":{}},"body":{"interfaces/Product.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/WssGateway.html":{},"coverage.html":{},"index.html":{}}}],["users.controller",{"_index":465,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.decorator",{"_index":419,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.service",{"_index":417,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userschema",{"_index":466,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":377,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":109,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UsersController.html":{},"guards/WsJwtGuard.html":{}}}],["usersmodule",{"_index":65,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":107,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthMiddleware.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"guards/WsJwtGuard.html":{},"coverage.html":{},"overview.html":{}}}],["usuario",{"_index":160,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usuario'})@get('myinfo",{"_index":397,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuario'})@post('/create",{"_index":410,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuario'})@post('/login",{"_index":406,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuarios",{"_index":440,"title":{},"body":{"controllers/UsersController.html":{}}}],["usuarios'})@get('/list",{"_index":403,"title":{},"body":{"controllers/UsersController.html":{}}}],["utilities",{"_index":756,"title":{},"body":{"index.html":{}}}],["valid",{"_index":540,"title":{},"body":{"injectables/UsersService.html":{}}}],["validate",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["validate(dto",{"_index":535,"title":{},"body":{"injectables/UsersService.html":{}}}],["validate(object",{"_index":596,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validateobjectid",{"_index":293,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["validation",{"_index":542,"title":{},"body":{"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["validationpipe",{"_index":76,"title":{"injectables/ValidationPipe.html":{}},"body":{"modules/AppModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":221,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["valido",{"_index":152,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["value",{"_index":588,"title":{},"body":{"injectables/ValidationPipe.html":{},"classes/WssGateway.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vamos",{"_index":153,"title":{},"body":{"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{}}}],["variable",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":824,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CheckAdminRoleMiddleware.html":{},"injectables/CheckRoleMiddleware.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/WssGateway.html":{}}}],["want",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":781,"title":{},"body":{"index.html":{}}}],["website",{"_index":811,"title":{},"body":{"index.html":{}}}],["websocketgateway",{"_index":656,"title":{},"body":{"classes/WssGateway.html":{}}}],["websocketgateway(wss_port",{"_index":659,"title":{},"body":{"classes/WssGateway.html":{}}}],["websockets",{"_index":766,"title":{},"body":{"index.html":{}}}],["websocketserver",{"_index":650,"title":{},"body":{"classes/WssGateway.html":{}}}],["wsjwtguard",{"_index":609,"title":{"guards/WsJwtGuard.html":{}},"body":{"guards/WsJwtGuard.html":{},"coverage.html":{}}}],["wss",{"_index":643,"title":{},"body":{"classes/WssGateway.html":{}}}],["wss.gateway",{"_index":676,"title":{},"body":{"modules/WssModule.html":{}}}],["wss_port",{"_index":658,"title":{},"body":{"classes/WssGateway.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wssgateway",{"_index":492,"title":{"classes/WssGateway.html":{}},"body":{"injectables/UsersService.html":{},"classes/WssGateway.html":{},"modules/WssModule.html":{},"coverage.html":{},"overview.html":{}}}],["wssmodule",{"_index":326,"title":{"modules/WssModule.html":{}},"body":{"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{},"modules.html":{},"overview.html":{}}}],["ya",{"_index":525,"title":{},"body":{"injectables/UsersService.html":{}}}],["you'd",{"_index":801,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules/WssModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/all-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/all-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException, HttpStatus } from '@nestjs/common';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n    catch(exception: unknown, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n\n        const status = exception instanceof HttpException\n            ? exception.getStatus()\n            : HttpStatus.INTERNAL_SERVER_ERROR;\n\n        response.status(status).json({\n            statusCode: status,\n            timestamp: new Date().toISOString(),\n            path: request.url,\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nProductModule\n\nProductModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ProductModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { APP_PIPE, APP_FILTER } from '@nestjs/core';\nimport { ValidationPipe } from './shared/pipes/validation.pipe';\nimport { ConfigModule } from 'nestjs-config';\nimport { ProductModule } from './controllers/product/product.module';\nimport { UsersModule } from './controllers/users/users.module';\nimport { AllExceptionsFilter } from './shared/filters/all-exception.filter';\nimport * as path from 'path';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot('mongodb://localhost:27017/nestjs-restapi', {\n      useCreateIndex: true,\n      useNewUrlParser: true,\n      useFindAndModify: false,\n    }),\n    ConfigModule.load(path.resolve(__dirname, 'config', '**/!(*.d).{ts,js}')),\n    UsersModule,\n    ProductModule,\n  ],\n  controllers: [],\n  providers: [\n    {\n      provide: APP_PIPE,\n      useClass: ValidationPipe,\n    },\n    // { // enable on production\n    //   provide: APP_FILTER,\n    //   useClass: AllExceptionsFilter,\n    // },\n  ],\n  exports: [],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/middlewares/auth.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/shared/middlewares/auth.middleware.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/middlewares/auth.middleware.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { NestMiddleware, HttpStatus, Injectable } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport * as jwt from 'jsonwebtoken';\nimport { SECRET } from '../../config';\nimport { UsersService } from '../../controllers/users/users.service';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n    constructor(private readonly userService: UsersService) { }\n\n    async use(req: Request, res: Response, next: NextFunction) {\n        const authHeaders = req.headers.authorization;\n        if (authHeaders && (authHeaders as string).split(' ')[1]) {\n            const token = (authHeaders as string).split(' ')[1];\n            const decoded: any = jwt.verify(token, SECRET);\n            const user = await this.userService.findById(decoded.id);\n\n            if (!user) {\n                throw new HttpException('User not found.', HttpStatus.UNAUTHORIZED);\n            }\n\n            req.user = user;\n            next();\n\n        } else {\n            throw new HttpException('Not authorized.', HttpStatus.UNAUTHORIZED);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckAdminRoleMiddleware.html":{"url":"injectables/CheckAdminRoleMiddleware.html","title":"injectable - CheckAdminRoleMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CheckAdminRoleMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/middlewares/check-admin-role.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/middlewares/check-admin-role.middleware.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\n\n@Injectable()\nexport class CheckAdminRoleMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n\n    const USER = req.user;\n\n    if (USER.role === 'ADMIN_ROLE') {\n      // Si es valido vamos a ejecutar los procesos\n      console.log('Es ADMIN');\n      next();\n      return;\n    } else {\n      // Si no es un usuario Admin mandaremos error.\n      console.log('No es ADMIN');\n      return res.status(401).json({\n        ok: false,\n        mensaje: 'Token incorrecto — No es administrador',\n        errors: { message: 'No es administrador, no puede hacer eso' }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckRoleMiddleware.html":{"url":"injectables/CheckRoleMiddleware.html","title":"injectable - CheckRoleMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CheckRoleMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/middlewares/check-role.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/middlewares/check-role.middleware.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware, HttpStatus } from '@nestjs/common';\nimport { stringify } from 'querystring';\n\n@Injectable()\nexport class CheckRoleMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n\n    const USER = req.user;\n    const ID = req.params.userId;\n\n    if (String(USER.id) === ID || USER.role === 'ADMIN_ROLE') {\n      // Si es valido vamos a ejecutar los procesos...\n      console.log('VALIDO');\n      next();\n      return;\n    } else {\n      // Si no es usuario admin manda el error.\n      console.log('INVALIDO');\n      return res.status(401).json({\n        ok: false,\n        mensaje: 'Token incorrecto — No es administrador ni es el mismo usuario',\n        errors: { message: 'No es administrador, no puede hacer eso' },\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                createdAt\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                modifiedAt\n                            \n                            \n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                status\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/create-user.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsEmail()@Length(3, 200)@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/create-user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/create-user.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/create-user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/create-user.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/create-user.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()@Length(3, 20)@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/create-user.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsDate, IsNotEmpty, IsBoolean, IsEmail, Length, MaxLength } from 'class-validator';\nimport { ApiModelProperty } from '@nestjs/swagger';\n\nexport class CreateUserDTO {\n\n    @IsNotEmpty()\n    @IsString()\n    @Length(3, 20)\n    @ApiModelProperty()\n    readonly username: string;\n\n    @IsNotEmpty()\n    @IsEmail()\n    @Length(3, 200)\n    @ApiModelProperty()\n    readonly email: string;\n\n    @IsNotEmpty()\n    @IsString()\n    @ApiModelProperty()\n    password: string;\n\n    @ApiModelProperty()\n    readonly role: string;\n\n    readonly createdAt?: Date;\n\n    modifiedAt: Date;\n\n    @ApiModelProperty()\n    readonly status: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDTO.html":{"url":"classes/LoginUserDTO.html","title":"class - LoginUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/users/dto/login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/login.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/login.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/login.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsDate, IsNotEmpty, IsBoolean, IsEmail, Length, MaxLength } from 'class-validator';\nimport { ApiModelProperty } from '@nestjs/swagger';\n\nexport class LoginUserDTO {\n\n    @ApiModelProperty()\n    readonly username: string;\n\n    @ApiModelProperty()\n    readonly email: string;\n\n    @ApiModelProperty()\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/product/interfaces/product.interface.ts\n        \n\n            \n                Description\n            \n            \n                Users Interface\nExtended from Products Schema\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        description\n                                \n                                \n                                        imageURL\n                                \n                                \n                                        name\n                                \n                                \n                                        price\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageURL\n                                    \n                                \n                                \n                                    \n                                        imageURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\n/**\n * Users Interface\n * ================\n * Extended from Products Schema\n */\nexport interface Product extends Document {\n    readonly name: string;\n    readonly description: string;\n    readonly imageURL: string;\n    readonly price: number;\n    readonly createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPost\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getProduct\n                            \n                            \n                                    Async\n                                getProducts\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPost(res, createProductDTO: CreateProductDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')\n                \n            \n\n            \n                \n                    Defined in src/controllers/product/product.controller.ts:37\n                \n            \n\n\n            \n                \n                    Crear un producto\nPOST\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createProductDTO\n                                    \n                                                CreateProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(res, productId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete')\n                \n            \n\n            \n                \n                    Defined in src/controllers/product/product.controller.ts:99\n                \n            \n\n\n            \n                \n                    Eliminar a un producto con ID\nDELETE\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(res, productId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/:productId')\n                \n            \n\n            \n                \n                    Defined in src/controllers/product/product.controller.ts:75\n                \n            \n\n\n            \n                \n                    Obtener producto con ID\nGET\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProducts(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')\n                \n            \n\n            \n                \n                    Defined in src/controllers/product/product.controller.ts:54\n                \n            \n\n\n            \n                \n                    Obtener lista de producto\nGET\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(res, createProductDTO: CreateProductDTO, productId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/update')\n                \n            \n\n            \n                \n                    Defined in src/controllers/product/product.controller.ts:125\n                \n            \n\n\n            \n                \n                    Modificar o actualizar a un producto\nPUT\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createProductDTO\n                                    \n                                                CreateProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Get,\n    Post,\n    Put,\n    Delete,\n    Res,\n    HttpStatus,\n    Body,\n    Param,\n    NotFoundException,\n    Query,\n    BadRequestException,\n} from '@nestjs/common';\n\nimport { CreateProductDTO } from './dto/product.dto';\nimport { ProductService } from './product.service';\nimport { ValidateObjectId } from '../../shared/pipes/validate-object-id.pipe';\nimport { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\n\n@ApiUseTags('api')\n@Controller('product')\nexport class ProductController {\n\n    constructor(\n        private productService: ProductService,\n    ) { }\n\n    /**\n     * Crear un producto\n     * =====================\n     * **POST**\n     * @param {object} res\n     * @param {class} createProductDTO\n     */\n    @Post('/create')\n    async createPost(\n        @Res() res,\n        @Body() createProductDTO: CreateProductDTO,\n    ) {\n        const PRODUCT_CREATED = await this.productService.createProduct(createProductDTO);\n        return res.status(HttpStatus.CREATED).json({\n            PRODUCT_CREATED,\n        });\n    }\n\n    /**\n     * Obtener lista de producto\n     * =====================\n     * **GET**\n     * @param {object} res\n     */\n    @Get('/list')\n    async getProducts(\n        @Res() res,\n    ) {\n        const PRODUCTS = await this.productService.getProducts()\n            .catch((error: any) => {\n                throw new BadRequestException(error);\n            });\n        return res.status(HttpStatus.OK).json({\n            PRODUCTS,\n        });\n    }\n\n    /**\n     * Obtener producto con ID\n     * =====================\n     * **GET**\n     * @param {object} res\n     * @param {string} productId\n     */\n    @ApiBearerAuth()\n    @Get('/:productId')\n    async getProduct(\n        @Res() res,\n        @Param('productId', new ValidateObjectId()) productId,\n    ) {\n\n        const PRODUCT = await this.productService.getProduct(productId)\n            .catch(error => {\n                throw new BadRequestException(error);\n            });\n        if (!PRODUCT) { throw new NotFoundException(`Product with ID: ${productId} does not exist.`); }\n\n        return res.status(HttpStatus.OK).json({\n            PRODUCT,\n        });\n    }\n\n    /**\n     * Eliminar a un producto con ID\n     * =====================\n     * **DELETE**\n     * @param {object} res \n     * @param {string} productId \n     */\n    @Delete('/delete')\n    async deleteProduct(\n        @Res() res,\n        @Query('productId', new ValidateObjectId()) productId,\n    ) {\n\n        const PRODUCT_DELETED = await this.productService.deleteProduct(productId)\n            .catch(error => {\n                throw new BadRequestException(error);\n            });\n        if (!PRODUCT_DELETED) { throw new NotFoundException(`Product with ID: ${productId} does not exist.`); }\n\n        return res.status(HttpStatus.OK).json({\n            message: 'Product Deleted Successfully',\n            PRODUCT_DELETED,\n        });\n    }\n\n    /**\n     * Modificar o actualizar a un producto\n     * =====================\n     * **PUT**\n     * @param {object} res \n     * @param {object} createProductDTO \n     * @param {string} productId \n     */\n    @Put('/update')\n    async updateProduct(\n        @Res() res,\n        @Body() createProductDTO: CreateProductDTO,\n        @Query('productId', new ValidateObjectId()) productId,\n    ) {\n\n        const UPDATED_PRODUCT = await this.productService.updateProduct(productId, createProductDTO)\n            .catch(error => {\n                throw new BadRequestException(error);\n            });\n        if (!UPDATED_PRODUCT) { throw new NotFoundException(`Product with ID: ${productId} does not exist.`); }\n\n        return res.status(HttpStatus.OK).json({\n            message: 'Product Updated Successfully',\n            UPDATED_PRODUCT,\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nWssModule\n\nWssModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nWssModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/controllers/product/product.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WssModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductController } from './product.controller';\nimport { ProductService } from './product.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ProductSchema } from './schemas/product.schema';\nimport { WssModule } from '../../shared/gateways/wss.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: 'Product', schema: ProductSchema },\n    ]),\n    WssModule,\n  ],\n  controllers: [ProductController],\n  providers: [\n    ProductService,\n    WssModule,\n  ],\n})\nexport class ProductModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/product/product.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getProduct\n                            \n                            \n                                    Async\n                                getProducts\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/controllers/product/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(createProductDTO: CreateProductDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/product/product.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDTO\n                                    \n                                                CreateProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(productID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/product/product.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(productID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/product/product.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/product/product.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(productID: string, createProductDTO: CreateProductDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/product/product.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createProductDTO\n                                    \n                                                CreateProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\nimport { Product } from './interfaces/product.interface';\nimport { CreateProductDTO } from './dto/product.dto';\n\n@Injectable()\nexport class ProductService {\n\n    constructor(\n        @InjectModel('Product') private readonly productModel: Model,\n    ) { }\n\n    async createProduct(createProductDTO: CreateProductDTO): Promise {\n\n        const PRODUCT = new this.productModel(createProductDTO);\n        return await PRODUCT.save();\n    }\n\n    async getProduct(productID: string): Promise {\n        const PRODUCT = await this.productModel.findById(productID);\n        return PRODUCT;\n    }\n\n    async getProducts(): Promise {\n        const PRODUCTS = await this.productModel.find();\n        return PRODUCTS;\n    }\n\n    async updateProduct(productID: string, createProductDTO: CreateProductDTO): Promise {\n        const UPDATED_PRODUCT = await this.productModel.findByIdAndUpdate(productID, createProductDTO, { new: true });\n        return UPDATED_PRODUCT;\n    }\n\n    async deleteProduct(productID: string): Promise {\n        const DELETED_PRODUCT = await this.productModel.findByIdAndDelete(productID);\n        return DELETED_PRODUCT;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/users/dto/users.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                avatar\n                            \n                            \n                                    Readonly\n                                    Optional\n                                bio\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdAt\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                    Optional\n                                firstName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                modifiedAt\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Readonly\n                                    Optional\n                                status\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/users.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/users.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/users.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/users.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/users.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/users.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            modifiedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/users.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/users.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/users.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/users.dto.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/users/dto/users.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsDate, IsNotEmpty, IsBoolean, IsEmail, Length, MaxLength } from 'class-validator';\nimport { ApiModelProperty } from '@nestjs/swagger';\n\nexport class UserDTO {\n\n\n    @ApiModelProperty()\n    readonly firstName?: string;\n\n    @ApiModelProperty()\n    readonly lastName?: string;\n\n    @ApiModelProperty()\n    readonly username: string;\n\n    @ApiModelProperty()\n    readonly email: string;\n\n    @ApiModelProperty()\n    readonly password: string;\n\n    @ApiModelProperty()\n    readonly avatar?: string;\n\n    @ApiModelProperty()\n    readonly bio?: string;\n\n    @ApiModelProperty()\n    readonly role?: string;\n\n    @ApiModelProperty()\n    readonly createdAt?: Date;\n\n    @ApiModelProperty()\n    readonly modifiedAt?: Date;\n\n    @ApiModelProperty()\n    readonly status?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Users.html":{"url":"interfaces/Users.html","title":"interface - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/users/interfaces/users.interface.ts\n        \n\n            \n                Description\n            \n            \n                Users Interface\nExtended from Users Schema\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        avatar\n                                \n                                \n                                            Optional\n                                        bio\n                                \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        firstName\n                                \n                                \n                                            Optional\n                                        lastName\n                                \n                                \n                                            Optional\n                                        modifiedAt\n                                \n                                \n                                        password\n                                \n                                \n                                            Optional\n                                        role\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modifiedAt\n                                    \n                                \n                                \n                                    \n                                        modifiedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\n/**\n * Users Interface\n * ================\n * Extended from Users Schema\n */\nexport interface Users extends Document {\n    readonly firstName?: string;\n    readonly lastName?: string;\n    readonly username: string;\n    readonly email: string;\n    readonly password: string;\n    readonly avatar?: string;\n    readonly bio?: string;\n    readonly role?: string;\n    readonly createdAt?: Date;\n    readonly modifiedAt?: Date;\n    readonly status?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findMe\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(res, userId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOperation({title: 'Eliminar cliente por ID'})@Delete('/delete/:userId')\n                \n            \n\n            \n                \n                    Defined in src/controllers/users/users.controller.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMe(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({title: 'Obtener informacion de usuario'})@Get('myinfo')\n                \n            \n\n            \n                \n                    Defined in src/controllers/users/users.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(res, userId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOperation({title: 'Obtener cliente por ID'})@Get('/:userId')\n                \n            \n\n            \n                \n                    Defined in src/controllers/users/users.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOperation({title: 'Obtener lista de usuarios'})@Get('/list')\n                \n            \n\n            \n                \n                    Defined in src/controllers/users/users.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(res, loginUserDTO: LoginUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({title: 'Login de usuario'})@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/controllers/users/users.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loginUserDTO\n                                    \n                                                LoginUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(res, createUserDTO: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({title: 'Crear usuario'})@Post('/create')\n                \n            \n\n            \n                \n                    Defined in src/controllers/users/users.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(res, userId, createUserDTO: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOperation({title: 'Actualizar cliente por ID'})@Put('/update/:userId')\n                \n            \n\n            \n                \n                    Defined in src/controllers/users/users.controller.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Post,\n    Get,\n    Put,\n    Delete,\n    Res,\n    Body,\n    HttpStatus,\n    Param,\n    BadRequestException,\n    NotFoundException,\n    HttpException,\n    OnModuleInit,\n} from '@nestjs/common';\n\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport { UsersService } from './users.service';\nimport { ValidateObjectId } from './../../shared/pipes/validate-object-id.pipe';\nimport { LoginUserDTO } from './dto/login.dto';\nimport { User } from './users.decorator';\nimport { Users } from './interfaces/users.interface';\nimport { Logger } from '@nestjs/common';\nimport { ApiBearerAuth, ApiUseTags, ApiOperation } from '@nestjs/swagger';\n\n\n@ApiUseTags('api')\n@Controller('user')\nexport class UsersController implements OnModuleInit {\n\n    private logger = new Logger('User Module');\n\n    constructor(\n        private userService: UsersService,\n    ) { }\n\n    onModuleInit() {\n        this.logger.log('User Module Loaded...');\n    }\n\n    @ApiOperation({ title: 'Obtener informacion de usuario' })\n    @Get('myinfo')\n    async findMe(\n        @User('email') email: string,\n    ): Promise {\n        return await this.userService.findByEmail(email);\n    }\n\n    @ApiOperation({ title: 'Crear usuario' })\n    @Post('/create')\n    async register(\n        @Res() res,\n        @Body() createUserDTO: CreateUserDTO,\n    ) {\n        const USER_REGISTERED = await this.userService.create(createUserDTO);\n        return res.status(HttpStatus.CREATED).json({\n            message: 'User created',\n            USER_REGISTERED,\n        });\n    }\n\n    @ApiOperation({ title: 'Login de usuario' })\n    @Post('/login')\n    async login(\n        @Res() res,\n        @Body() loginUserDTO: LoginUserDTO,\n    ) {\n        const _USER = await this.userService.findOne(loginUserDTO);\n        const errors = { User: ' not found' };\n        if (!_USER) { throw new HttpException({ errors }, 401); }\n\n        const token = await this.userService.generateJWT(_USER);\n\n        const { firstName, username, email, bio, avatar } = _USER;\n        const USER = { firstName, username, token, email, bio, avatar };\n\n        return res.status(HttpStatus.CREATED).json({\n            message: 'Login Successful',\n            USER,\n        });\n    }\n\n    @ApiBearerAuth()\n    @ApiOperation({ title: 'Obtener lista de usuarios' })\n    @Get('/list')\n    async getUsers(\n        @Res() res,\n    ) {\n        const USERS = await this.userService.getUsers();\n        return res.status(HttpStatus.OK).json({\n            USERS,\n        });\n    }\n\n    @ApiBearerAuth()\n    @ApiOperation({ title: 'Obtener cliente por ID' })\n    @Get('/:userId')\n    async getUser(\n        @Res() res,\n        @Param('userId', new ValidateObjectId()) userId,\n    ) {\n        const USER = await this.userService.getUser(userId);\n        return res.status(HttpStatus.OK).json({\n            USER,\n        });\n    }\n\n    @ApiBearerAuth()\n    @ApiOperation({ title: 'Actualizar cliente por ID' })\n    @Put('/update/:userId')\n    async updateUser(\n        @Res() res,\n        @Param('userId', new ValidateObjectId()) userId,\n        @Body() createUserDTO: CreateUserDTO,\n    ) {\n        const UPDATED_USER = await this.userService.updateUser(userId, createUserDTO)\n            .catch(error => {\n                throw new BadRequestException(error);\n            });\n\n        if (!UPDATED_USER) { throw new NotFoundException(`Product with ID: ${userId} does not exists.`) };\n        return res.status(HttpStatus.OK).json({\n            message: 'User updated Successfully',\n            UPDATED_USER,\n        });\n    }\n\n    @ApiBearerAuth()\n    @ApiOperation({ title: 'Eliminar cliente por ID' })\n    @Delete('/delete/:userId')\n    async deleteUser(\n        @Res() res,\n        @Param('userId', new ValidateObjectId()) userId,\n    ) {\n        const DELETED_USER = await this.userService.deleteUser(userId);\n        return res.status(HttpStatus.ACCEPTED).json({\n            message: 'User Deleted Successfully',\n            DELETED_USER,\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nWssModule\n\nWssModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nWssModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/controllers/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WssModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/users/users.module.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer, RequestMethod, NestModule } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from './schemas/users.schema';\nimport { AuthMiddleware } from '../../shared/middlewares/auth.middleware';\nimport { CheckAdminRoleMiddleware } from '../../shared/middlewares/check-admin-role.middleware';\nimport { CheckRoleMiddleware } from '../../shared/middlewares/check-role.middleware';\nimport { WssModule } from '../../shared/gateways/wss.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: 'User', schema: UserSchema },\n    ]),\n    WssModule,\n  ],\n  controllers: [UsersController],\n  providers: [\n    UsersService,\n    WssModule,\n  ],\n})\nexport class UsersModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes(\n        { path: 'user', method: RequestMethod.GET },\n        { path: 'user/list', method: RequestMethod.GET },\n        { path: 'user/:userId', method: RequestMethod.GET },\n        { path: 'user/update/:userId', method: RequestMethod.PUT },\n        { path: 'user/delete/:userID', method: RequestMethod.DELETE },\n      );\n    consumer\n      .apply(CheckAdminRoleMiddleware)\n      .forRoutes(\n        { path: 'user/:userId', method: RequestMethod.GET },\n      );\n    consumer\n      .apply(CheckRoleMiddleware)\n      .forRoutes(\n        { path: 'user/:userId', method: RequestMethod.GET },\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildUserRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                generateJWT\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, gateway: WssGateway)\n                    \n                \n                        \n                            \n                                Defined in src/controllers/users/users.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gateway\n                                                  \n                                                        \n                                                                        WssGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildUserRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildUserRO(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/users/users.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { id: any; username: any; email: any; role: any; bio: any; avatar: any; token: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/users/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/users/users.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/users/users.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/users/users.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(loginUserDto: LoginUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/users/users.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateJWT\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateJWT(user)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/users/users.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/users/users.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/users/users.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(userId: string, createUserDto: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/users/users.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException, HttpStatus } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Users } from './interfaces/users.interface';\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { validate } from 'class-validator';\nimport * as crypto from 'crypto';\nimport { LoginUserDTO } from './dto/login.dto';\nimport { SECRET } from '../../config';\nimport * as jwt from 'jsonwebtoken';\nimport { WssGateway } from '../../shared/gateways/wss.gateway';\n\n@Injectable()\nexport class UsersService {\n\n    constructor(\n        @InjectModel('User') private readonly userModel: Model,\n        private readonly gateway: WssGateway,\n    ) { }\n\n    async create(dto: CreateUserDTO): Promise {\n\n        // Checking if user exist\n        const USER_EXIST = await this.userModel.findOne({ $or: [{ username: dto.username }, { email: dto.email }] });\n        if (USER_EXIST) { throw new BadRequestException(`El usuario ya está registrado.`); }\n\n        // dto.password = bcrypt.hashSync(dto.password, 10);\n        dto.password = crypto.createHmac('sha256', dto.password).digest('hex');\n        dto.modifiedAt = new Date();\n\n        // creating a new user\n        const ERRORS = await validate(dto);\n        if (ERRORS.length > 0) {\n            const _ERROR = { username: 'User input is not valid.' };\n            throw new HttpException({ message: 'Input data validation failed', _ERROR }, HttpStatus.BAD_REQUEST);\n\n        } else {\n            const USER = new this.userModel(dto);\n            await USER.save();\n            this.gateway.wss.emit('nuevoUsuario', USER);\n            return USER;\n        }\n    }\n\n    async findOne(loginUserDto: LoginUserDTO) {\n        const findOneOptions = {\n            $or: [\n                {\n                    email: loginUserDto.email,\n                    password: crypto.createHmac('sha256', loginUserDto.password).digest('hex'),\n                },\n                {\n                    username: loginUserDto.username,\n                    password: crypto.createHmac('sha256', loginUserDto.password).digest('hex'),\n                },\n\n            ],\n        };\n\n        return await this.userModel.findOne(findOneOptions);\n    }\n\n    async getUsers(): Promise {\n        const USERS = await this.userModel.find();\n        return USERS;\n    }\n\n    async getUser(userId: string): Promise {\n        const USER = await this.userModel.findById(userId);\n        return USER;\n    }\n\n    async updateUser(userId: string, createUserDto: CreateUserDTO): Promise {\n        const UPDATED_USER = await this.userModel.findByIdAndUpdate(userId, createUserDto, { new: true });\n        return UPDATED_USER;\n    }\n\n    async deleteUser(userId: string): Promise {\n        const DELETED_USER = await this.userModel.findOneAndDelete(userId);\n        return DELETED_USER;\n    }\n\n\n    async findById(id) {\n        const USER = await this.userModel.findById(id);\n\n        return this.buildUserRO(USER);\n    }\n\n    async findByEmail(email: string): Promise {\n        const USER = await this.userModel.findOne({ email });\n        return this.buildUserRO(USER);\n    }\n\n    public generateJWT(user) {\n        const today = new Date();\n        const exp = new Date(today);\n        exp.setDate(today.getDate() + 60);\n\n        return jwt.sign({\n            id: user.id,\n            username: user.username,\n            email: user.email,\n            exp: exp.getTime() / 1000,\n        }, SECRET);\n    }\n\n    private buildUserRO(user: any) {\n        const userRO = {\n            id: user._id,\n            username: user.username,\n            email: user.email,\n            role: user.role,\n            bio: user.bio,\n            avatar: user.avatar,\n            token: this.generateJWT(user),\n        };\n\n        return { ...userRO };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/pipes/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildError\n                            \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildError(errors)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, ArgumentMetadata, BadRequestException, HttpStatus, Injectable } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n    async transform(value, metadata: ArgumentMetadata) {\n\n        if (!value) {\n            throw new BadRequestException('No data submitted');\n        }\n\n        const { metatype } = metadata;\n        if (!metatype || !this.toValidate(metatype)) {\n            return value;\n        }\n        const object = plainToClass(metatype, value);\n        const errors = await validate(object);\n        if (errors.length > 0) {\n            throw new HttpException({ message: 'Input data validation failed', errors: this.buildError(errors) }, HttpStatus.BAD_REQUEST);\n        }\n        return value;\n    }\n\n    private buildError(errors) {\n        const result = {};\n        errors.forEach(el => {\n            let prop = el.property;\n            Object.entries(el.constraints).forEach(constraint => {\n                result[prop + constraint[0]] = `${constraint[1]}`;\n            });\n        });\n        return result;\n    }\n\n    private toValidate(metatype): boolean {\n        const types = [String, Boolean, Number, Array, Object];\n        return !types.find((type) => metatype === type);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/WsJwtGuard.html":{"url":"guards/WsJwtGuard.html","title":"guard - WsJwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    WsJwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/shared/gateways/wss.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/shared/gateways/wss.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/gateways/wss.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, Logger, HttpException, HttpStatus } from '@nestjs/common';\n\n/*\n    Custom imports for AuthService, jwt secret, etc...\n*/\nimport { SECRET } from '../../config';\nimport * as jwt from 'jsonwebtoken';\nimport { UsersService } from '../../controllers/users/users.service';\n\n// FIXME: Guard de momento no se ha probado...\n@Injectable()\nexport class WsJwtGuard implements CanActivate {\n\n    private logger = new Logger('WSS Guard');\n\n    constructor(private readonly userService: UsersService) { }\n\n    async canActivate(context: ExecutionContext) {\n\n        const client = context.switchToWs().getClient();\n        const cookies: string[] = client.handshake.headers.cookie.split('; ');\n        const authToken = cookies.find(cookie => cookie.startsWith('token')).split('=')[1];\n\n        if (authToken && (authToken as string).split('=')[1]) {\n            const decoded: any = jwt.verify(authToken, SECRET);\n            const user = await this.userService.findById(decoded.id);\n\n            if (!user) {\n                this.logger.error('GUARD — Not authorized');\n                throw new HttpException('GUARD — Not authorized', HttpStatus.UNAUTHORIZED);\n            }\n\n            context.switchToWs().getData().user = user;\n            return Boolean(user);\n\n        } else {\n            this.logger.error('GUARD — Not authorized');\n            throw new HttpException('GUARD — Not authorized', HttpStatus.UNAUTHORIZED);\n        }\n    }\n}\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WssGateway.html":{"url":"classes/WssGateway.html","title":"class - WssGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WssGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/gateways/wss.gateway.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayConnection\n                        OnGatewayDisconnect\n                        OnModuleInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Private\n                                users\n                            \n                            \n                                wss\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('WSS Server')\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/gateways/wss.gateway.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/gateways/wss.gateway.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wss\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @WebSocketServer()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/gateways/wss.gateway.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleConnection\n                        \n                        \n                    \n                \n            \n            \n                \nhandleConnection(client)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/gateways/wss.gateway.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDisconnect\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/gateways/wss.gateway.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/gateways/wss.gateway.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger, OnModuleInit } from '@nestjs/common';\nimport {\n  WebSocketGateway,\n  WebSocketServer,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n} from '@nestjs/websockets';\nimport { WSS_PORT } from '../../config';\n\n@WebSocketGateway(WSS_PORT)\nexport class WssGateway implements OnGatewayConnection, OnGatewayDisconnect, OnModuleInit {\n  @WebSocketServer() wss;\n  private users: number = 0;\n  private logger = new Logger('WSS Server');\n\n  onModuleInit() {\n    this.logger.log(`WebSockets Listenig on https://localhost:${WSS_PORT}`);\n  }\n\n  handleConnection(client) {\n    this.users++;\n    this.wss.emit('activeUsers', this.users);\n    this.logger.log('New client connected');\n    this.logger.log(`Actived clients: ${String(this.users)}`);\n    client.emit('connection', 'Connected');\n  }\n\n  handleDisconnect() {\n    this.users--;\n    this.wss.emit('activeUsers', this.users);\n    this.logger.log('Client disconnected ');\n    this.logger.log(`Actived clients: ${String(this.users)}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WssModule.html":{"url":"modules/WssModule.html","title":"module - WssModule","body":"\n                   \n\n\n\n\n    Modules\n    WssModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WssModule\n\n\n\ncluster_WssModule_exports\n\n\n\n\nWssGateway \n\nWssGateway \n\n\n\nWssModule\n\nWssModule\n\nWssGateway  -->\n\nWssModule->WssGateway \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/gateways/wss.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            WssGateway\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WssGateway } from './wss.gateway';\n\n@Module({\n    providers: [WssGateway],\n    exports: [WssGateway],\n})\nexport class WssModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config.ts\n            \n            variable\n            SECRET\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            variable\n            WSS_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/controllers/product/interfaces/product.interface.ts\n            \n            interface\n            Product\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/controllers/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/controllers/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/controllers/product/schemas/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/controllers/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDTO\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controllers/users/dto/login.dto.ts\n            \n            class\n            LoginUserDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/users/dto/users.dto.ts\n            \n            class\n            UserDTO\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/controllers/users/interfaces/users.interface.ts\n            \n            interface\n            Users\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/controllers/users/schemas/users.schema.ts\n            \n            variable\n            ROLES_VALIDOS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/controllers/users/schemas/users.schema.ts\n            \n            variable\n            UserSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/controllers/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/controllers/users/users.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/controllers/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            HOST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/filters/all-exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/gateways/wss.gateway.ts\n            \n            class\n            WssGateway\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/gateways/wss.guard.ts\n            \n            guard\n            WsJwtGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/middlewares/check-admin-role.middleware.ts\n            \n            injectable\n            CheckAdminRoleMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/middlewares/check-role.middleware.ts\n            \n            injectable\n            CheckRoleMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/pipes/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.2.4\n        \n            @nestjs/core : ^6.2.4\n        \n            @nestjs/mongoose : ^6.1.2\n        \n            @nestjs/platform-express : ^6.2.4\n        \n            @nestjs/platform-socket.io : ^6.2.4\n        \n            @nestjs/swagger : ^3.0.2\n        \n            @nestjs/websockets : ^6.2.4\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.9.1\n        \n            crypto : ^1.0.1\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^5.5.11\n        \n            mongoose-unique-validator : ^2.0.3\n        \n            nestjs-config : ^1.4.0\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            swagger-ui-express : ^4.0.4\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n\n\nFeatures\n\nRestful API ready to use with Users and more modules\nJWT integration and Authentication with Token Validation\nRoles integration with middleware\nFilter integration for exception management\nPipes and utilities for different purposes.\nIntegration with database nosql with Mongoose Library (Mongodb)\nBest coding practices.\nWebSockets implemented\nSwagger API Implemented\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nbash\n$ npm install\nRunning the app\n```bash\ndevelopment\n$ npm run start\nwatch mode\n$ npm run start:dev\nproduction mode\n$ npm run start:prod\n```\nTest\n```bash\nunit tests\n$ npm run test\ne2e tests\n$ npm run test:e2e\ntest coverage\n$ npm run test:cov\n```\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WssModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_WssModule\n\n\n\ncluster_WssModule_exports\n\n\n\n\nProductModule\n\nProductModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nWssModule\n\nWssModule\n\nProductModule -->\n\nWssModule->ProductModule\n\n\n\nUsersModule -->\n\nWssModule->UsersModule\n\n\n\n\n\nWssGateway \n\nWssGateway \n\nWssGateway  -->\n\nWssModule->WssGateway \n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HOST   (src/.../main.ts)\n                        \n                        \n                            PORT   (src/.../main.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                        \n                            ROLES_VALIDOS   (src/.../users.schema.ts)\n                        \n                        \n                            SECRET   (src/.../config.ts)\n                        \n                        \n                            User   (src/.../users.decorator.ts)\n                        \n                        \n                            UserSchema   (src/.../users.schema.ts)\n                        \n                        \n                            WSS_PORT   (src/.../config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOST\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.SERVER_PORT || 3000\n                        \n                    \n\n\n            \n        \n\n    src/controllers/product/schemas/product.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ProductSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    name: {\n        type: String,\n        required: true,\n    },\n    description: String,\n    imageURL: String,\n    price: Number,\n    createdAt: {\n        type: Date,\n        default: Date.now,\n    },\n})\n                        \n                    \n\n                \n                    \n                        Product Schema for MongoDB\n\n                    \n                \n\n            \n        \n\n    src/controllers/users/schemas/users.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ROLES_VALIDOS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    values: ['ADMIN_ROLE', 'USER_ROLE'],\n    message: '{VALUE} No es un role permitido.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    firstName: {\n        type: String,\n        required: false,\n        default: '',\n    },\n    lastName: {\n        type: String,\n        required: false,\n        default: '',\n    },\n    username: {\n        type: String,\n        unique: true,\n        required: [\n            true,\n            'Username is required',\n        ],\n    },\n    email: {\n        type: String,\n        unique: true,\n        required: [\n            true,\n            'Email is required',\n        ],\n    },\n    password: {\n        type: String,\n        required: [\n            true,\n            'Password is required',\n        ],\n    },\n    avatar: {\n        type: String,\n        required: false,\n        default: '',\n    },\n    bio: {\n        type: String,\n        required: false,\n        default: '',\n    },\n    role: {\n        type: String,\n        default: 'USER_ROLE',\n        enum: ROLES_VALIDOS,\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now,\n    },\n    modifiedAt: {\n        type: Date,\n    },\n    status: {\n        type: Boolean,\n        default: true,\n    },\n})\n                        \n                    \n\n                \n                    \n                        User Schema for MongoDB\n\n                    \n                \n\n            \n        \n\n    src/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SECRET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Mi-Token-Secretisimo'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WSS_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4001\n                        \n                    \n\n\n            \n        \n\n    src/controllers/users/users.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req) => {\n\n    // FIXME: Arreglar el req.user que no devuelve datos...\n    // if route is protected, there is a user set in auth.middleware\n    // if (!!req.user) {\n    //     return !!data ? req.user[data] : req.user;\n    // }\n    console.log('Decorador...');\n\n    // in case a route is not protected, we still want to get the optional auth user from jwt\n    const token = req.headers.authorization ? (req.headers.authorization as string).split(' ') : null;\n    if (token && token[1]) {\n        const decoded: any = jwt.verify(token[1], SECRET);\n        return !!data ? decoded[data] : decoded.user;\n    }\n\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
